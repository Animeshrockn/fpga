// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_gemm,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=3.330000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.913750,HLS_SYN_LAT=120604187137,HLS_SYN_TPT=none,HLS_SYN_MEM=89,HLS_SYN_DSP=5,HLS_SYN_FF=3058,HLS_SYN_LUT=3487,HLS_VERSION=2020_1}" *)

module kernel_gemm (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        alpha,
        beta,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 28'd1;
parameter    ap_ST_fsm_state2 = 28'd2;
parameter    ap_ST_fsm_pp0_stage0 = 28'd4;
parameter    ap_ST_fsm_state18 = 28'd8;
parameter    ap_ST_fsm_state19 = 28'd16;
parameter    ap_ST_fsm_pp1_stage0 = 28'd32;
parameter    ap_ST_fsm_state35 = 28'd64;
parameter    ap_ST_fsm_pp2_stage0 = 28'd128;
parameter    ap_ST_fsm_state47 = 28'd256;
parameter    ap_ST_fsm_state48 = 28'd512;
parameter    ap_ST_fsm_state49 = 28'd1024;
parameter    ap_ST_fsm_state50 = 28'd2048;
parameter    ap_ST_fsm_state51 = 28'd4096;
parameter    ap_ST_fsm_state52 = 28'd8192;
parameter    ap_ST_fsm_state53 = 28'd16384;
parameter    ap_ST_fsm_state54 = 28'd32768;
parameter    ap_ST_fsm_state55 = 28'd65536;
parameter    ap_ST_fsm_state56 = 28'd131072;
parameter    ap_ST_fsm_state57 = 28'd262144;
parameter    ap_ST_fsm_state58 = 28'd524288;
parameter    ap_ST_fsm_state59 = 28'd1048576;
parameter    ap_ST_fsm_state60 = 28'd2097152;
parameter    ap_ST_fsm_state61 = 28'd4194304;
parameter    ap_ST_fsm_state62 = 28'd8388608;
parameter    ap_ST_fsm_state63 = 28'd16777216;
parameter    ap_ST_fsm_state64 = 28'd33554432;
parameter    ap_ST_fsm_pp3_stage0 = 28'd67108864;
parameter    ap_ST_fsm_state74 = 28'd134217728;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input  [31:0] alpha;
input  [31:0] beta;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [27:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] C;
wire   [31:0] A;
wire   [31:0] B;
reg    gmem_blk_n_AR;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] empty_6_reg_1477;
reg   [0:0] empty_6_reg_1477_pp0_iter1_reg;
reg    gmem_blk_n_R;
reg    ap_enable_reg_pp0_iter9;
reg   [0:0] icmp_ln19_reg_1447;
reg   [0:0] icmp_ln19_reg_1447_pp0_iter8_reg;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp1_stage0;
reg   [0:0] empty_12_reg_1536;
reg   [0:0] empty_12_reg_1536_pp1_iter1_reg;
reg    ap_enable_reg_pp1_iter9;
reg   [0:0] icmp_ln26_reg_1511;
reg   [0:0] icmp_ln26_reg_1511_pp1_iter8_reg;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_pp2_stage0;
reg   [0:0] empty_17_reg_1586;
reg   [0:0] empty_17_reg_1586_pp2_iter1_reg;
reg    ap_enable_reg_pp2_iter9;
reg   [0:0] icmp_ln31_reg_1561;
reg   [0:0] icmp_ln31_reg_1561_pp2_iter8_reg;
reg    gmem_blk_n_AW;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp3_stage0;
reg   [0:0] empty_27_reg_1711;
reg   [0:0] empty_27_reg_1711_pp3_iter1_reg;
reg    gmem_blk_n_W;
reg    ap_enable_reg_pp3_iter3;
reg   [0:0] icmp_ln42_reg_1685;
reg   [0:0] icmp_ln42_reg_1685_pp3_iter2_reg;
reg    gmem_blk_n_B;
reg    ap_enable_reg_pp3_iter8;
reg   [0:0] empty_31_reg_1730;
reg   [0:0] empty_31_reg_1730_pp3_iter7_reg;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
wire   [31:0] gmem_AWADDR;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [14:0] indvar_flatten_reg_344;
reg   [7:0] ii_0_reg_355;
reg   [7:0] jj_0_reg_366;
reg   [14:0] indvar_flatten8_reg_389;
reg   [7:0] ii1_0_reg_400;
reg   [7:0] kk_0_reg_411;
reg   [14:0] indvar_flatten16_reg_422;
reg   [7:0] kk2_0_reg_433;
reg   [7:0] jj3_0_reg_444;
reg   [14:0] indvar_flatten24_reg_488;
reg   [7:0] ii7_0_reg_499;
reg   [7:0] jj8_0_reg_510;
wire   [31:0] grp_fu_525_p2;
reg   [31:0] reg_529;
reg    ap_enable_reg_pp0_iter13;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_state5_io;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
reg    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln19_reg_1447_pp0_iter12_reg;
reg    ap_enable_reg_pp1_iter13;
wire    ap_block_state20_pp1_stage0_iter0;
wire    ap_block_state21_pp1_stage0_iter1;
wire    ap_block_state22_pp1_stage0_iter2;
reg    ap_block_state22_io;
wire    ap_block_state23_pp1_stage0_iter3;
wire    ap_block_state24_pp1_stage0_iter4;
wire    ap_block_state25_pp1_stage0_iter5;
wire    ap_block_state26_pp1_stage0_iter6;
wire    ap_block_state27_pp1_stage0_iter7;
wire    ap_block_state28_pp1_stage0_iter8;
reg    ap_block_state29_pp1_stage0_iter9;
wire    ap_block_state30_pp1_stage0_iter10;
wire    ap_block_state31_pp1_stage0_iter11;
wire    ap_block_state32_pp1_stage0_iter12;
wire    ap_block_state33_pp1_stage0_iter13;
wire    ap_block_state34_pp1_stage0_iter14;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln26_reg_1511_pp1_iter12_reg;
wire    ap_CS_fsm_state56;
wire   [31:0] local_C_q0;
reg   [31:0] reg_536;
wire    ap_block_state65_pp3_stage0_iter0;
wire    ap_block_state66_pp3_stage0_iter1;
wire    ap_block_state67_pp3_stage0_iter2;
reg    ap_block_state67_io;
wire    ap_block_state68_pp3_stage0_iter3;
reg    ap_block_state68_io;
wire    ap_block_state69_pp3_stage0_iter4;
wire    ap_block_state70_pp3_stage0_iter5;
wire    ap_block_state71_pp3_stage0_iter6;
wire    ap_block_state72_pp3_stage0_iter7;
reg    ap_block_state73_pp3_stage0_iter8;
reg    ap_block_pp3_stage0_11001;
reg   [0:0] icmp_ln42_reg_1685_pp3_iter1_reg;
wire   [30:0] p_cast31_fu_552_p1;
reg   [30:0] p_cast31_reg_1394;
wire   [30:0] p_cast30_fu_566_p1;
reg   [30:0] p_cast30_reg_1399;
wire   [30:0] p_cast_fu_580_p1;
reg   [30:0] p_cast_reg_1404;
wire   [0:0] icmp_ln16_fu_584_p2;
wire    ap_CS_fsm_state2;
wire   [8:0] add_ln16_fu_590_p2;
reg   [8:0] add_ln16_reg_1414;
wire   [11:0] select_ln17_fu_610_p3;
reg   [11:0] select_ln17_reg_1419;
wire   [11:0] select_ln16_fu_618_p3;
reg   [11:0] select_ln16_reg_1424;
wire   [22:0] zext_ln17_fu_626_p1;
reg   [22:0] zext_ln17_reg_1435;
wire   [22:0] tmp_4_fu_639_p3;
reg   [22:0] tmp_4_reg_1442;
wire    ap_CS_fsm_pp0_stage0;
wire   [0:0] icmp_ln19_fu_647_p2;
reg   [0:0] icmp_ln19_reg_1447_pp0_iter1_reg;
reg   [0:0] icmp_ln19_reg_1447_pp0_iter2_reg;
reg   [0:0] icmp_ln19_reg_1447_pp0_iter3_reg;
reg   [0:0] icmp_ln19_reg_1447_pp0_iter4_reg;
reg   [0:0] icmp_ln19_reg_1447_pp0_iter5_reg;
reg   [0:0] icmp_ln19_reg_1447_pp0_iter6_reg;
reg   [0:0] icmp_ln19_reg_1447_pp0_iter7_reg;
reg   [0:0] icmp_ln19_reg_1447_pp0_iter9_reg;
reg   [0:0] icmp_ln19_reg_1447_pp0_iter10_reg;
reg   [0:0] icmp_ln19_reg_1447_pp0_iter11_reg;
reg   [0:0] icmp_ln19_reg_1447_pp0_iter13_reg;
wire   [14:0] add_ln19_fu_653_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [7:0] ii_fu_659_p2;
reg   [7:0] ii_reg_1456;
wire   [0:0] icmp_ln20_fu_665_p2;
reg   [0:0] icmp_ln20_reg_1461;
wire   [7:0] select_ln22_fu_671_p3;
reg   [7:0] select_ln22_reg_1466;
reg   [7:0] select_ln22_reg_1466_pp0_iter1_reg;
reg   [7:0] select_ln22_reg_1466_pp0_iter2_reg;
reg   [7:0] select_ln22_reg_1466_pp0_iter3_reg;
reg   [7:0] select_ln22_reg_1466_pp0_iter4_reg;
reg   [7:0] select_ln22_reg_1466_pp0_iter5_reg;
reg   [7:0] select_ln22_reg_1466_pp0_iter6_reg;
reg   [7:0] select_ln22_reg_1466_pp0_iter7_reg;
reg   [7:0] select_ln22_reg_1466_pp0_iter8_reg;
reg   [7:0] select_ln22_reg_1466_pp0_iter9_reg;
reg   [7:0] select_ln22_reg_1466_pp0_iter10_reg;
reg   [7:0] select_ln22_reg_1466_pp0_iter11_reg;
reg   [7:0] select_ln22_reg_1466_pp0_iter12_reg;
reg   [7:0] select_ln22_reg_1466_pp0_iter13_reg;
wire   [7:0] select_ln22_1_fu_679_p3;
reg   [7:0] select_ln22_1_reg_1471;
reg   [7:0] select_ln22_1_reg_1471_pp0_iter1_reg;
reg   [7:0] select_ln22_1_reg_1471_pp0_iter2_reg;
reg   [7:0] select_ln22_1_reg_1471_pp0_iter3_reg;
reg   [7:0] select_ln22_1_reg_1471_pp0_iter4_reg;
reg   [7:0] select_ln22_1_reg_1471_pp0_iter5_reg;
reg   [7:0] select_ln22_1_reg_1471_pp0_iter6_reg;
reg   [7:0] select_ln22_1_reg_1471_pp0_iter7_reg;
reg   [7:0] select_ln22_1_reg_1471_pp0_iter8_reg;
reg   [7:0] select_ln22_1_reg_1471_pp0_iter9_reg;
reg   [7:0] select_ln22_1_reg_1471_pp0_iter10_reg;
reg   [7:0] select_ln22_1_reg_1471_pp0_iter11_reg;
reg   [7:0] select_ln22_1_reg_1471_pp0_iter12_reg;
reg   [7:0] select_ln22_1_reg_1471_pp0_iter13_reg;
wire   [0:0] empty_6_fu_699_p2;
wire   [7:0] jj_fu_705_p2;
wire   [30:0] add_ln22_3_fu_742_p2;
reg   [30:0] add_ln22_3_reg_1486;
reg   [31:0] gmem_addr_read_reg_1497;
wire   [0:0] tmp_29_fu_782_p3;
wire    ap_CS_fsm_state19;
wire   [22:0] zext_ln24_fu_790_p1;
reg   [22:0] zext_ln24_reg_1506;
wire   [0:0] icmp_ln26_fu_811_p2;
wire    ap_CS_fsm_pp1_stage0;
reg   [0:0] icmp_ln26_reg_1511_pp1_iter1_reg;
reg   [0:0] icmp_ln26_reg_1511_pp1_iter2_reg;
reg   [0:0] icmp_ln26_reg_1511_pp1_iter3_reg;
reg   [0:0] icmp_ln26_reg_1511_pp1_iter4_reg;
reg   [0:0] icmp_ln26_reg_1511_pp1_iter5_reg;
reg   [0:0] icmp_ln26_reg_1511_pp1_iter6_reg;
reg   [0:0] icmp_ln26_reg_1511_pp1_iter7_reg;
reg   [0:0] icmp_ln26_reg_1511_pp1_iter9_reg;
reg   [0:0] icmp_ln26_reg_1511_pp1_iter10_reg;
reg   [0:0] icmp_ln26_reg_1511_pp1_iter11_reg;
reg   [0:0] icmp_ln26_reg_1511_pp1_iter13_reg;
wire   [14:0] add_ln26_fu_817_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [7:0] select_ln29_fu_835_p3;
reg   [7:0] select_ln29_reg_1520;
reg   [7:0] select_ln29_reg_1520_pp1_iter1_reg;
reg   [7:0] select_ln29_reg_1520_pp1_iter2_reg;
reg   [7:0] select_ln29_reg_1520_pp1_iter3_reg;
reg   [7:0] select_ln29_reg_1520_pp1_iter4_reg;
reg   [7:0] select_ln29_reg_1520_pp1_iter5_reg;
reg   [7:0] select_ln29_reg_1520_pp1_iter6_reg;
reg   [7:0] select_ln29_reg_1520_pp1_iter7_reg;
reg   [7:0] select_ln29_reg_1520_pp1_iter8_reg;
reg   [7:0] select_ln29_reg_1520_pp1_iter9_reg;
reg   [7:0] select_ln29_reg_1520_pp1_iter10_reg;
reg   [7:0] select_ln29_reg_1520_pp1_iter11_reg;
reg   [7:0] select_ln29_reg_1520_pp1_iter12_reg;
reg   [7:0] select_ln29_reg_1520_pp1_iter13_reg;
wire   [7:0] select_ln29_1_fu_852_p3;
reg   [7:0] select_ln29_1_reg_1525;
reg   [7:0] select_ln29_1_reg_1525_pp1_iter1_reg;
reg   [7:0] select_ln29_1_reg_1525_pp1_iter2_reg;
reg   [7:0] select_ln29_1_reg_1525_pp1_iter3_reg;
reg   [7:0] select_ln29_1_reg_1525_pp1_iter4_reg;
reg   [7:0] select_ln29_1_reg_1525_pp1_iter5_reg;
reg   [7:0] select_ln29_1_reg_1525_pp1_iter6_reg;
reg   [7:0] select_ln29_1_reg_1525_pp1_iter7_reg;
reg   [7:0] select_ln29_1_reg_1525_pp1_iter8_reg;
reg   [7:0] select_ln29_1_reg_1525_pp1_iter9_reg;
reg   [7:0] select_ln29_1_reg_1525_pp1_iter10_reg;
reg   [7:0] select_ln29_1_reg_1525_pp1_iter11_reg;
reg   [7:0] select_ln29_1_reg_1525_pp1_iter12_reg;
reg   [7:0] select_ln29_1_reg_1525_pp1_iter13_reg;
wire   [22:0] add_ln29_2_fu_876_p2;
reg   [22:0] add_ln29_2_reg_1531;
wire   [0:0] empty_12_fu_893_p2;
wire   [7:0] kk_fu_899_p2;
wire   [30:0] add_ln29_3_fu_908_p2;
reg   [30:0] add_ln29_3_reg_1545;
reg   [31:0] gmem_addr_2_read_reg_1556;
wire   [0:0] icmp_ln31_fu_966_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state36_pp2_stage0_iter0;
wire    ap_block_state37_pp2_stage0_iter1;
wire    ap_block_state38_pp2_stage0_iter2;
reg    ap_block_state38_io;
wire    ap_block_state39_pp2_stage0_iter3;
wire    ap_block_state40_pp2_stage0_iter4;
wire    ap_block_state41_pp2_stage0_iter5;
wire    ap_block_state42_pp2_stage0_iter6;
wire    ap_block_state43_pp2_stage0_iter7;
wire    ap_block_state44_pp2_stage0_iter8;
reg    ap_block_state45_pp2_stage0_iter9;
wire    ap_block_state46_pp2_stage0_iter10;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln31_reg_1561_pp2_iter1_reg;
reg   [0:0] icmp_ln31_reg_1561_pp2_iter2_reg;
reg   [0:0] icmp_ln31_reg_1561_pp2_iter3_reg;
reg   [0:0] icmp_ln31_reg_1561_pp2_iter4_reg;
reg   [0:0] icmp_ln31_reg_1561_pp2_iter5_reg;
reg   [0:0] icmp_ln31_reg_1561_pp2_iter6_reg;
reg   [0:0] icmp_ln31_reg_1561_pp2_iter7_reg;
reg   [0:0] icmp_ln31_reg_1561_pp2_iter9_reg;
wire   [14:0] add_ln31_fu_972_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [7:0] select_ln34_fu_990_p3;
reg   [7:0] select_ln34_reg_1570;
reg   [7:0] select_ln34_reg_1570_pp2_iter1_reg;
reg   [7:0] select_ln34_reg_1570_pp2_iter2_reg;
reg   [7:0] select_ln34_reg_1570_pp2_iter3_reg;
reg   [7:0] select_ln34_reg_1570_pp2_iter4_reg;
reg   [7:0] select_ln34_reg_1570_pp2_iter5_reg;
reg   [7:0] select_ln34_reg_1570_pp2_iter6_reg;
reg   [7:0] select_ln34_reg_1570_pp2_iter7_reg;
reg   [7:0] select_ln34_reg_1570_pp2_iter8_reg;
reg   [7:0] select_ln34_reg_1570_pp2_iter9_reg;
wire   [7:0] select_ln34_1_fu_1008_p3;
reg   [7:0] select_ln34_1_reg_1575;
reg   [7:0] select_ln34_1_reg_1575_pp2_iter1_reg;
reg   [7:0] select_ln34_1_reg_1575_pp2_iter2_reg;
reg   [7:0] select_ln34_1_reg_1575_pp2_iter3_reg;
reg   [7:0] select_ln34_1_reg_1575_pp2_iter4_reg;
reg   [7:0] select_ln34_1_reg_1575_pp2_iter5_reg;
reg   [7:0] select_ln34_1_reg_1575_pp2_iter6_reg;
reg   [7:0] select_ln34_1_reg_1575_pp2_iter7_reg;
reg   [7:0] select_ln34_1_reg_1575_pp2_iter8_reg;
reg   [7:0] select_ln34_1_reg_1575_pp2_iter9_reg;
wire   [22:0] add_ln34_2_fu_1032_p2;
reg   [22:0] add_ln34_2_reg_1581;
wire   [0:0] empty_17_fu_1049_p2;
wire   [7:0] jj_2_fu_1055_p2;
wire   [30:0] add_ln34_3_fu_1064_p2;
reg   [30:0] add_ln34_3_reg_1595;
reg   [31:0] gmem_addr_3_read_reg_1606;
wire   [7:0] kk_3_fu_1110_p2;
reg   [7:0] kk_3_reg_1614;
wire    ap_CS_fsm_state48;
wire   [15:0] zext_ln39_fu_1116_p1;
reg   [15:0] zext_ln39_reg_1619;
wire   [0:0] icmp_ln36_fu_1104_p2;
wire   [15:0] zext_ln37_fu_1128_p1;
reg   [15:0] zext_ln37_reg_1624;
wire   [11:0] k_fu_1132_p2;
wire   [7:0] ii_5_fu_1144_p2;
reg   [7:0] ii_5_reg_1637;
wire    ap_CS_fsm_state49;
wire   [15:0] zext_ln39_1_fu_1158_p1;
reg   [15:0] zext_ln39_1_reg_1642;
wire   [0:0] icmp_ln37_fu_1138_p2;
wire   [31:0] local_A_q0;
reg   [31:0] local_A_load_reg_1652;
wire    ap_CS_fsm_state50;
wire   [7:0] jj_3_fu_1178_p2;
reg   [7:0] jj_3_reg_1660;
wire    ap_CS_fsm_state51;
wire   [0:0] icmp_ln38_fu_1172_p2;
reg   [13:0] local_C_addr_2_reg_1670;
wire   [31:0] local_B_q0;
reg   [31:0] local_B_load_reg_1675;
wire    ap_CS_fsm_state52;
wire   [31:0] grp_fu_521_p2;
reg   [31:0] tmp_3_reg_1680;
wire    ap_CS_fsm_state63;
wire   [0:0] icmp_ln42_fu_1225_p2;
wire    ap_CS_fsm_pp3_stage0;
wire   [14:0] add_ln42_fu_1231_p2;
reg   [14:0] add_ln42_reg_1689;
reg    ap_enable_reg_pp3_iter0;
wire   [7:0] select_ln45_fu_1249_p3;
reg   [7:0] select_ln45_reg_1695;
wire   [7:0] select_ln45_1_fu_1257_p3;
reg   [7:0] select_ln45_1_reg_1700;
wire   [22:0] add_ln45_2_fu_1290_p2;
reg   [22:0] add_ln45_2_reg_1706;
wire   [0:0] empty_27_fu_1307_p2;
wire   [7:0] jj_1_fu_1313_p2;
wire   [30:0] add_ln45_4_fu_1347_p2;
reg   [30:0] add_ln45_4_reg_1725;
wire   [0:0] empty_31_fu_1363_p2;
reg   [0:0] empty_31_reg_1730_pp3_iter2_reg;
reg   [0:0] empty_31_reg_1730_pp3_iter3_reg;
reg   [0:0] empty_31_reg_1730_pp3_iter4_reg;
reg   [0:0] empty_31_reg_1730_pp3_iter5_reg;
reg   [0:0] empty_31_reg_1730_pp3_iter6_reg;
wire   [11:0] j_fu_1379_p2;
wire    ap_CS_fsm_state74;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter14;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state20;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter12;
reg    ap_enable_reg_pp1_iter14;
wire    ap_CS_fsm_state35;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state36;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter10;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state65;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter5;
reg    ap_enable_reg_pp3_iter6;
reg    ap_enable_reg_pp3_iter7;
reg   [13:0] local_A_address0;
reg    local_A_ce0;
reg    local_A_we0;
reg   [13:0] local_B_address0;
reg    local_B_ce0;
reg    local_B_we0;
reg   [13:0] local_C_address0;
reg    local_C_ce0;
reg    local_C_we0;
reg   [31:0] local_C_d0;
reg   [8:0] indvar_flatten31_reg_311;
reg   [11:0] i_0_reg_322;
reg   [11:0] j_0_reg_333;
reg   [7:0] ap_phi_mux_ii_0_phi_fu_359_p4;
reg   [11:0] k_0_reg_377;
wire    ap_CS_fsm_state18;
reg   [7:0] ap_phi_mux_ii1_0_phi_fu_404_p4;
reg   [7:0] ap_phi_mux_kk2_0_phi_fu_437_p4;
reg   [7:0] kk4_0_reg_455;
wire    ap_CS_fsm_state47;
reg   [7:0] ii5_0_reg_466;
reg   [7:0] jj6_0_reg_477;
wire    ap_CS_fsm_state64;
reg   [14:0] ap_phi_mux_indvar_flatten24_phi_fu_492_p4;
reg   [7:0] ap_phi_mux_ii7_0_phi_fu_503_p4;
wire   [63:0] zext_ln22_6_fu_777_p1;
wire   [63:0] zext_ln29_6_fu_943_p1;
wire   [63:0] zext_ln34_6_fu_1099_p1;
wire   [63:0] zext_ln39_2_fu_1167_p1;
wire   [63:0] zext_ln39_4_fu_1193_p1;
wire   [63:0] zext_ln39_5_fu_1203_p1;
wire   [63:0] zext_ln45_5_fu_1342_p1;
wire   [63:0] zext_ln22_4_fu_747_p1;
wire   [63:0] zext_ln29_4_fu_913_p1;
wire   [63:0] zext_ln34_4_fu_1069_p1;
wire   [63:0] zext_ln45_6_fu_1369_p1;
reg    ap_block_pp3_stage0_01001;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state57;
reg   [31:0] grp_fu_525_p0;
reg   [31:0] grp_fu_525_p1;
wire    ap_CS_fsm_state53;
wire   [29:0] tmp_24_fu_542_p4;
wire   [29:0] tmp_25_fu_556_p4;
wire   [29:0] tmp_26_fu_570_p4;
wire   [0:0] tmp_27_fu_602_p3;
wire   [11:0] i_fu_596_p2;
wire   [11:0] zext_ln22_fu_630_p1;
wire   [11:0] add_ln22_fu_634_p2;
wire   [6:0] empty_5_fu_687_p1;
wire   [14:0] tmp_28_fu_691_p3;
wire   [11:0] zext_ln22_1_fu_711_p1;
wire   [11:0] add_ln22_1_fu_714_p2;
wire   [22:0] tmp_15_mid1_fu_719_p3;
wire   [22:0] select_ln22_2_fu_727_p3;
wire   [22:0] add_ln22_2_fu_733_p2;
wire   [30:0] zext_ln22_3_fu_738_p1;
wire   [14:0] tmp_15_fu_757_p3;
wire   [15:0] zext_ln22_5_fu_768_p1;
wire   [15:0] zext_ln22_2_fu_764_p1;
wire   [15:0] add_ln22_4_fu_771_p2;
wire   [11:0] zext_ln29_fu_794_p1;
wire   [11:0] add_ln29_fu_798_p2;
wire   [0:0] icmp_ln27_fu_829_p2;
wire   [7:0] ii_4_fu_823_p2;
wire   [11:0] zext_ln29_1_fu_843_p1;
wire   [11:0] add_ln29_1_fu_847_p2;
wire   [22:0] tmp_16_mid1_fu_860_p3;
wire   [22:0] tmp_16_fu_803_p3;
wire   [22:0] select_ln29_2_fu_868_p3;
wire   [6:0] empty_11_fu_881_p1;
wire   [14:0] tmp_31_fu_885_p3;
wire   [30:0] zext_ln29_3_fu_905_p1;
wire   [14:0] tmp_19_fu_923_p3;
wire   [15:0] zext_ln29_5_fu_934_p1;
wire   [15:0] zext_ln29_2_fu_930_p1;
wire   [15:0] add_ln29_4_fu_937_p2;
wire   [11:0] zext_ln34_fu_948_p1;
wire   [11:0] add_ln34_fu_952_p2;
wire   [0:0] icmp_ln32_fu_984_p2;
wire   [7:0] kk_2_fu_978_p2;
wire   [11:0] zext_ln34_1_fu_998_p1;
wire   [11:0] add_ln34_1_fu_1002_p2;
wire   [22:0] tmp_18_mid1_fu_1016_p3;
wire   [22:0] tmp_18_fu_958_p3;
wire   [22:0] select_ln34_2_fu_1024_p3;
wire   [6:0] empty_16_fu_1037_p1;
wire   [14:0] tmp_33_fu_1041_p3;
wire   [30:0] zext_ln34_3_fu_1061_p1;
wire   [14:0] tmp_21_fu_1079_p3;
wire   [15:0] zext_ln34_5_fu_1090_p1;
wire   [15:0] zext_ln34_2_fu_1086_p1;
wire   [15:0] add_ln34_4_fu_1093_p2;
wire   [14:0] tmp_22_fu_1120_p3;
wire   [14:0] tmp_23_fu_1150_p3;
wire   [15:0] add_ln39_fu_1162_p2;
wire   [15:0] zext_ln39_3_fu_1184_p1;
wire   [15:0] add_ln39_1_fu_1188_p2;
wire   [15:0] add_ln39_2_fu_1198_p2;
wire   [11:0] zext_ln45_fu_1208_p1;
wire   [11:0] add_ln45_fu_1212_p2;
wire   [0:0] icmp_ln43_fu_1243_p2;
wire   [7:0] ii_3_fu_1237_p2;
wire   [11:0] zext_ln45_2_fu_1265_p1;
wire   [11:0] add_ln45_1_fu_1269_p2;
wire   [22:0] tmp_17_mid1_fu_1274_p3;
wire   [22:0] tmp_17_fu_1217_p3;
wire   [22:0] select_ln45_2_fu_1282_p3;
wire   [6:0] empty_26_fu_1295_p1;
wire   [14:0] tmp_30_fu_1299_p3;
wire   [14:0] tmp_20_fu_1319_p3;
wire   [15:0] zext_ln45_4_fu_1333_p1;
wire   [15:0] zext_ln45_1_fu_1326_p1;
wire   [15:0] add_ln45_3_fu_1336_p2;
wire   [30:0] zext_ln45_3_fu_1330_p1;
wire   [6:0] empty_30_fu_1352_p1;
wire   [14:0] tmp_32_fu_1355_p3;
reg    grp_fu_525_ce;
wire    ap_CS_fsm_state54;
reg   [27:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_CS_fsm = 28'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
end

kernel_gemm_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
kernel_gemm_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .C(C),
    .A(A),
    .B(B)
);

kernel_gemm_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
kernel_gemm_gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(32'd128),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd128),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(reg_536),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

kernel_gemm_local_A #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
local_A_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(local_A_address0),
    .ce0(local_A_ce0),
    .we0(local_A_we0),
    .d0(reg_529),
    .q0(local_A_q0)
);

kernel_gemm_local_A #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
local_B_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(local_B_address0),
    .ce0(local_B_ce0),
    .we0(local_B_we0),
    .d0(gmem_addr_3_read_reg_1606),
    .q0(local_B_q0)
);

kernel_gemm_local_A #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
local_C_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(local_C_address0),
    .ce0(local_C_ce0),
    .we0(local_C_we0),
    .d0(local_C_d0),
    .q0(local_C_q0)
);

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_536),
    .din1(reg_529),
    .ce(1'b1),
    .dout(grp_fu_521_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_525_p0),
    .din1(grp_fu_525_p1),
    .ce(grp_fu_525_ce),
    .dout(grp_fu_525_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_584_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_584_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter14 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state20) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state19) & (tmp_29_fu_782_p3 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state20)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state20);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end else if (((1'b1 == ap_CS_fsm_state19) & (tmp_29_fu_782_p3 == 1'd0))) begin
            ap_enable_reg_pp1_iter14 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state36) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state35)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state36)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state36);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end else if ((1'b1 == ap_CS_fsm_state35)) begin
            ap_enable_reg_pp2_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state65) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state19) & (tmp_29_fu_782_p3 == 1'd1))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state65)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state65);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
        end else if (((1'b1 == ap_CS_fsm_state19) & (tmp_29_fu_782_p3 == 1'd1))) begin
            ap_enable_reg_pp3_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        i_0_reg_322 <= select_ln16_reg_1424;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_322 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln26_reg_1511 == 1'd0))) begin
        ii1_0_reg_400 <= select_ln29_1_reg_1525;
    end else if (((1'b1 == ap_CS_fsm_state19) & (tmp_29_fu_782_p3 == 1'd0))) begin
        ii1_0_reg_400 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) & (icmp_ln38_fu_1172_p2 == 1'd1))) begin
        ii5_0_reg_466 <= ii_5_reg_1637;
    end else if (((1'b1 == ap_CS_fsm_state48) & (icmp_ln36_fu_1104_p2 == 1'd0))) begin
        ii5_0_reg_466 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (tmp_29_fu_782_p3 == 1'd1))) begin
        ii7_0_reg_499 <= 8'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln42_reg_1685 == 1'd0))) begin
        ii7_0_reg_499 <= select_ln45_1_reg_1700;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln19_reg_1447 == 1'd0))) begin
        ii_0_reg_355 <= select_ln22_1_reg_1471;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_584_p2 == 1'd0))) begin
        ii_0_reg_355 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        indvar_flatten16_reg_422 <= 15'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln31_fu_966_p2 == 1'd0))) begin
        indvar_flatten16_reg_422 <= add_ln31_fu_972_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (tmp_29_fu_782_p3 == 1'd1))) begin
        indvar_flatten24_reg_488 <= 15'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln42_reg_1685 == 1'd0))) begin
        indvar_flatten24_reg_488 <= add_ln42_reg_1689;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        indvar_flatten31_reg_311 <= add_ln16_reg_1414;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten31_reg_311 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln26_fu_811_p2 == 1'd0))) begin
        indvar_flatten8_reg_389 <= add_ln26_fu_817_p2;
    end else if (((1'b1 == ap_CS_fsm_state19) & (tmp_29_fu_782_p3 == 1'd0))) begin
        indvar_flatten8_reg_389 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln19_fu_647_p2 == 1'd0))) begin
        indvar_flatten_reg_344 <= add_ln19_fu_653_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_584_p2 == 1'd0))) begin
        indvar_flatten_reg_344 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        j_0_reg_333 <= j_fu_1379_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_0_reg_333 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        jj3_0_reg_444 <= 8'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln31_fu_966_p2 == 1'd0))) begin
        jj3_0_reg_444 <= jj_2_fu_1055_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        jj6_0_reg_477 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        jj6_0_reg_477 <= jj_3_reg_1660;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (tmp_29_fu_782_p3 == 1'd1))) begin
        jj8_0_reg_510 <= 8'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln42_fu_1225_p2 == 1'd0))) begin
        jj8_0_reg_510 <= jj_1_fu_1313_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln19_fu_647_p2 == 1'd0))) begin
        jj_0_reg_366 <= jj_fu_705_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_584_p2 == 1'd0))) begin
        jj_0_reg_366 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        k_0_reg_377 <= 12'd0;
    end else if (((1'b1 == ap_CS_fsm_state48) & (icmp_ln36_fu_1104_p2 == 1'd1))) begin
        k_0_reg_377 <= k_fu_1132_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        kk2_0_reg_433 <= 8'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln31_reg_1561 == 1'd0))) begin
        kk2_0_reg_433 <= select_ln34_1_reg_1575;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        kk4_0_reg_455 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state49) & (icmp_ln37_fu_1138_p2 == 1'd1))) begin
        kk4_0_reg_455 <= kk_3_reg_1614;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln26_fu_811_p2 == 1'd0))) begin
        kk_0_reg_411 <= kk_fu_899_p2;
    end else if (((1'b1 == ap_CS_fsm_state19) & (tmp_29_fu_782_p3 == 1'd0))) begin
        kk_0_reg_411 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln16_reg_1414 <= add_ln16_fu_590_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln19_reg_1447 == 1'd0))) begin
        add_ln22_3_reg_1486 <= add_ln22_3_fu_742_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln26_fu_811_p2 == 1'd0))) begin
        add_ln29_2_reg_1531 <= add_ln29_2_fu_876_p2;
        empty_12_reg_1536 <= empty_12_fu_893_p2;
        select_ln29_reg_1520 <= select_ln29_fu_835_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln26_reg_1511 == 1'd0))) begin
        add_ln29_3_reg_1545 <= add_ln29_3_fu_908_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln31_fu_966_p2 == 1'd0))) begin
        add_ln34_2_reg_1581 <= add_ln34_2_fu_1032_p2;
        empty_17_reg_1586 <= empty_17_fu_1049_p2;
        select_ln34_reg_1570 <= select_ln34_fu_990_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln31_reg_1561 == 1'd0))) begin
        add_ln34_3_reg_1595 <= add_ln34_3_fu_1064_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln42_reg_1689 <= add_ln42_fu_1231_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln42_fu_1225_p2 == 1'd0))) begin
        add_ln45_2_reg_1706 <= add_ln45_2_fu_1290_p2;
        empty_27_reg_1711 <= empty_27_fu_1307_p2;
        select_ln45_reg_1695 <= select_ln45_fu_1249_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln42_reg_1685 == 1'd0))) begin
        add_ln45_4_reg_1725 <= add_ln45_4_fu_1347_p2;
        empty_31_reg_1730 <= empty_31_fu_1363_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        empty_12_reg_1536_pp1_iter1_reg <= empty_12_reg_1536;
        icmp_ln26_reg_1511 <= icmp_ln26_fu_811_p2;
        icmp_ln26_reg_1511_pp1_iter1_reg <= icmp_ln26_reg_1511;
        select_ln29_1_reg_1525_pp1_iter1_reg <= select_ln29_1_reg_1525;
        select_ln29_reg_1520_pp1_iter1_reg <= select_ln29_reg_1520;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        empty_17_reg_1586_pp2_iter1_reg <= empty_17_reg_1586;
        icmp_ln31_reg_1561 <= icmp_ln31_fu_966_p2;
        icmp_ln31_reg_1561_pp2_iter1_reg <= icmp_ln31_reg_1561;
        select_ln34_1_reg_1575_pp2_iter1_reg <= select_ln34_1_reg_1575;
        select_ln34_reg_1570_pp2_iter1_reg <= select_ln34_reg_1570;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        empty_27_reg_1711_pp3_iter1_reg <= empty_27_reg_1711;
        icmp_ln42_reg_1685 <= icmp_ln42_fu_1225_p2;
        icmp_ln42_reg_1685_pp3_iter1_reg <= icmp_ln42_reg_1685;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        empty_31_reg_1730_pp3_iter2_reg <= empty_31_reg_1730;
        empty_31_reg_1730_pp3_iter3_reg <= empty_31_reg_1730_pp3_iter2_reg;
        empty_31_reg_1730_pp3_iter4_reg <= empty_31_reg_1730_pp3_iter3_reg;
        empty_31_reg_1730_pp3_iter5_reg <= empty_31_reg_1730_pp3_iter4_reg;
        empty_31_reg_1730_pp3_iter6_reg <= empty_31_reg_1730_pp3_iter5_reg;
        empty_31_reg_1730_pp3_iter7_reg <= empty_31_reg_1730_pp3_iter6_reg;
        icmp_ln42_reg_1685_pp3_iter2_reg <= icmp_ln42_reg_1685_pp3_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln19_fu_647_p2 == 1'd0))) begin
        empty_6_reg_1477 <= empty_6_fu_699_p2;
        icmp_ln20_reg_1461 <= icmp_ln20_fu_665_p2;
        ii_reg_1456 <= ii_fu_659_p2;
        select_ln22_reg_1466 <= select_ln22_fu_671_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_6_reg_1477_pp0_iter1_reg <= empty_6_reg_1477;
        icmp_ln19_reg_1447 <= icmp_ln19_fu_647_p2;
        icmp_ln19_reg_1447_pp0_iter1_reg <= icmp_ln19_reg_1447;
        select_ln22_1_reg_1471_pp0_iter1_reg <= select_ln22_1_reg_1471;
        select_ln22_reg_1466_pp0_iter1_reg <= select_ln22_reg_1466;
        tmp_4_reg_1442[22 : 11] <= tmp_4_fu_639_p3[22 : 11];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln26_reg_1511_pp1_iter8_reg == 1'd0))) begin
        gmem_addr_2_read_reg_1556 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln31_reg_1561_pp2_iter8_reg == 1'd0))) begin
        gmem_addr_3_read_reg_1606 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln19_reg_1447_pp0_iter8_reg == 1'd0))) begin
        gmem_addr_read_reg_1497 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln19_reg_1447_pp0_iter10_reg <= icmp_ln19_reg_1447_pp0_iter9_reg;
        icmp_ln19_reg_1447_pp0_iter11_reg <= icmp_ln19_reg_1447_pp0_iter10_reg;
        icmp_ln19_reg_1447_pp0_iter12_reg <= icmp_ln19_reg_1447_pp0_iter11_reg;
        icmp_ln19_reg_1447_pp0_iter13_reg <= icmp_ln19_reg_1447_pp0_iter12_reg;
        icmp_ln19_reg_1447_pp0_iter2_reg <= icmp_ln19_reg_1447_pp0_iter1_reg;
        icmp_ln19_reg_1447_pp0_iter3_reg <= icmp_ln19_reg_1447_pp0_iter2_reg;
        icmp_ln19_reg_1447_pp0_iter4_reg <= icmp_ln19_reg_1447_pp0_iter3_reg;
        icmp_ln19_reg_1447_pp0_iter5_reg <= icmp_ln19_reg_1447_pp0_iter4_reg;
        icmp_ln19_reg_1447_pp0_iter6_reg <= icmp_ln19_reg_1447_pp0_iter5_reg;
        icmp_ln19_reg_1447_pp0_iter7_reg <= icmp_ln19_reg_1447_pp0_iter6_reg;
        icmp_ln19_reg_1447_pp0_iter8_reg <= icmp_ln19_reg_1447_pp0_iter7_reg;
        icmp_ln19_reg_1447_pp0_iter9_reg <= icmp_ln19_reg_1447_pp0_iter8_reg;
        select_ln22_1_reg_1471_pp0_iter10_reg <= select_ln22_1_reg_1471_pp0_iter9_reg;
        select_ln22_1_reg_1471_pp0_iter11_reg <= select_ln22_1_reg_1471_pp0_iter10_reg;
        select_ln22_1_reg_1471_pp0_iter12_reg <= select_ln22_1_reg_1471_pp0_iter11_reg;
        select_ln22_1_reg_1471_pp0_iter13_reg <= select_ln22_1_reg_1471_pp0_iter12_reg;
        select_ln22_1_reg_1471_pp0_iter2_reg <= select_ln22_1_reg_1471_pp0_iter1_reg;
        select_ln22_1_reg_1471_pp0_iter3_reg <= select_ln22_1_reg_1471_pp0_iter2_reg;
        select_ln22_1_reg_1471_pp0_iter4_reg <= select_ln22_1_reg_1471_pp0_iter3_reg;
        select_ln22_1_reg_1471_pp0_iter5_reg <= select_ln22_1_reg_1471_pp0_iter4_reg;
        select_ln22_1_reg_1471_pp0_iter6_reg <= select_ln22_1_reg_1471_pp0_iter5_reg;
        select_ln22_1_reg_1471_pp0_iter7_reg <= select_ln22_1_reg_1471_pp0_iter6_reg;
        select_ln22_1_reg_1471_pp0_iter8_reg <= select_ln22_1_reg_1471_pp0_iter7_reg;
        select_ln22_1_reg_1471_pp0_iter9_reg <= select_ln22_1_reg_1471_pp0_iter8_reg;
        select_ln22_reg_1466_pp0_iter10_reg <= select_ln22_reg_1466_pp0_iter9_reg;
        select_ln22_reg_1466_pp0_iter11_reg <= select_ln22_reg_1466_pp0_iter10_reg;
        select_ln22_reg_1466_pp0_iter12_reg <= select_ln22_reg_1466_pp0_iter11_reg;
        select_ln22_reg_1466_pp0_iter13_reg <= select_ln22_reg_1466_pp0_iter12_reg;
        select_ln22_reg_1466_pp0_iter2_reg <= select_ln22_reg_1466_pp0_iter1_reg;
        select_ln22_reg_1466_pp0_iter3_reg <= select_ln22_reg_1466_pp0_iter2_reg;
        select_ln22_reg_1466_pp0_iter4_reg <= select_ln22_reg_1466_pp0_iter3_reg;
        select_ln22_reg_1466_pp0_iter5_reg <= select_ln22_reg_1466_pp0_iter4_reg;
        select_ln22_reg_1466_pp0_iter6_reg <= select_ln22_reg_1466_pp0_iter5_reg;
        select_ln22_reg_1466_pp0_iter7_reg <= select_ln22_reg_1466_pp0_iter6_reg;
        select_ln22_reg_1466_pp0_iter8_reg <= select_ln22_reg_1466_pp0_iter7_reg;
        select_ln22_reg_1466_pp0_iter9_reg <= select_ln22_reg_1466_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln26_reg_1511_pp1_iter10_reg <= icmp_ln26_reg_1511_pp1_iter9_reg;
        icmp_ln26_reg_1511_pp1_iter11_reg <= icmp_ln26_reg_1511_pp1_iter10_reg;
        icmp_ln26_reg_1511_pp1_iter12_reg <= icmp_ln26_reg_1511_pp1_iter11_reg;
        icmp_ln26_reg_1511_pp1_iter13_reg <= icmp_ln26_reg_1511_pp1_iter12_reg;
        icmp_ln26_reg_1511_pp1_iter2_reg <= icmp_ln26_reg_1511_pp1_iter1_reg;
        icmp_ln26_reg_1511_pp1_iter3_reg <= icmp_ln26_reg_1511_pp1_iter2_reg;
        icmp_ln26_reg_1511_pp1_iter4_reg <= icmp_ln26_reg_1511_pp1_iter3_reg;
        icmp_ln26_reg_1511_pp1_iter5_reg <= icmp_ln26_reg_1511_pp1_iter4_reg;
        icmp_ln26_reg_1511_pp1_iter6_reg <= icmp_ln26_reg_1511_pp1_iter5_reg;
        icmp_ln26_reg_1511_pp1_iter7_reg <= icmp_ln26_reg_1511_pp1_iter6_reg;
        icmp_ln26_reg_1511_pp1_iter8_reg <= icmp_ln26_reg_1511_pp1_iter7_reg;
        icmp_ln26_reg_1511_pp1_iter9_reg <= icmp_ln26_reg_1511_pp1_iter8_reg;
        select_ln29_1_reg_1525_pp1_iter10_reg <= select_ln29_1_reg_1525_pp1_iter9_reg;
        select_ln29_1_reg_1525_pp1_iter11_reg <= select_ln29_1_reg_1525_pp1_iter10_reg;
        select_ln29_1_reg_1525_pp1_iter12_reg <= select_ln29_1_reg_1525_pp1_iter11_reg;
        select_ln29_1_reg_1525_pp1_iter13_reg <= select_ln29_1_reg_1525_pp1_iter12_reg;
        select_ln29_1_reg_1525_pp1_iter2_reg <= select_ln29_1_reg_1525_pp1_iter1_reg;
        select_ln29_1_reg_1525_pp1_iter3_reg <= select_ln29_1_reg_1525_pp1_iter2_reg;
        select_ln29_1_reg_1525_pp1_iter4_reg <= select_ln29_1_reg_1525_pp1_iter3_reg;
        select_ln29_1_reg_1525_pp1_iter5_reg <= select_ln29_1_reg_1525_pp1_iter4_reg;
        select_ln29_1_reg_1525_pp1_iter6_reg <= select_ln29_1_reg_1525_pp1_iter5_reg;
        select_ln29_1_reg_1525_pp1_iter7_reg <= select_ln29_1_reg_1525_pp1_iter6_reg;
        select_ln29_1_reg_1525_pp1_iter8_reg <= select_ln29_1_reg_1525_pp1_iter7_reg;
        select_ln29_1_reg_1525_pp1_iter9_reg <= select_ln29_1_reg_1525_pp1_iter8_reg;
        select_ln29_reg_1520_pp1_iter10_reg <= select_ln29_reg_1520_pp1_iter9_reg;
        select_ln29_reg_1520_pp1_iter11_reg <= select_ln29_reg_1520_pp1_iter10_reg;
        select_ln29_reg_1520_pp1_iter12_reg <= select_ln29_reg_1520_pp1_iter11_reg;
        select_ln29_reg_1520_pp1_iter13_reg <= select_ln29_reg_1520_pp1_iter12_reg;
        select_ln29_reg_1520_pp1_iter2_reg <= select_ln29_reg_1520_pp1_iter1_reg;
        select_ln29_reg_1520_pp1_iter3_reg <= select_ln29_reg_1520_pp1_iter2_reg;
        select_ln29_reg_1520_pp1_iter4_reg <= select_ln29_reg_1520_pp1_iter3_reg;
        select_ln29_reg_1520_pp1_iter5_reg <= select_ln29_reg_1520_pp1_iter4_reg;
        select_ln29_reg_1520_pp1_iter6_reg <= select_ln29_reg_1520_pp1_iter5_reg;
        select_ln29_reg_1520_pp1_iter7_reg <= select_ln29_reg_1520_pp1_iter6_reg;
        select_ln29_reg_1520_pp1_iter8_reg <= select_ln29_reg_1520_pp1_iter7_reg;
        select_ln29_reg_1520_pp1_iter9_reg <= select_ln29_reg_1520_pp1_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln31_reg_1561_pp2_iter2_reg <= icmp_ln31_reg_1561_pp2_iter1_reg;
        icmp_ln31_reg_1561_pp2_iter3_reg <= icmp_ln31_reg_1561_pp2_iter2_reg;
        icmp_ln31_reg_1561_pp2_iter4_reg <= icmp_ln31_reg_1561_pp2_iter3_reg;
        icmp_ln31_reg_1561_pp2_iter5_reg <= icmp_ln31_reg_1561_pp2_iter4_reg;
        icmp_ln31_reg_1561_pp2_iter6_reg <= icmp_ln31_reg_1561_pp2_iter5_reg;
        icmp_ln31_reg_1561_pp2_iter7_reg <= icmp_ln31_reg_1561_pp2_iter6_reg;
        icmp_ln31_reg_1561_pp2_iter8_reg <= icmp_ln31_reg_1561_pp2_iter7_reg;
        icmp_ln31_reg_1561_pp2_iter9_reg <= icmp_ln31_reg_1561_pp2_iter8_reg;
        select_ln34_1_reg_1575_pp2_iter2_reg <= select_ln34_1_reg_1575_pp2_iter1_reg;
        select_ln34_1_reg_1575_pp2_iter3_reg <= select_ln34_1_reg_1575_pp2_iter2_reg;
        select_ln34_1_reg_1575_pp2_iter4_reg <= select_ln34_1_reg_1575_pp2_iter3_reg;
        select_ln34_1_reg_1575_pp2_iter5_reg <= select_ln34_1_reg_1575_pp2_iter4_reg;
        select_ln34_1_reg_1575_pp2_iter6_reg <= select_ln34_1_reg_1575_pp2_iter5_reg;
        select_ln34_1_reg_1575_pp2_iter7_reg <= select_ln34_1_reg_1575_pp2_iter6_reg;
        select_ln34_1_reg_1575_pp2_iter8_reg <= select_ln34_1_reg_1575_pp2_iter7_reg;
        select_ln34_1_reg_1575_pp2_iter9_reg <= select_ln34_1_reg_1575_pp2_iter8_reg;
        select_ln34_reg_1570_pp2_iter2_reg <= select_ln34_reg_1570_pp2_iter1_reg;
        select_ln34_reg_1570_pp2_iter3_reg <= select_ln34_reg_1570_pp2_iter2_reg;
        select_ln34_reg_1570_pp2_iter4_reg <= select_ln34_reg_1570_pp2_iter3_reg;
        select_ln34_reg_1570_pp2_iter5_reg <= select_ln34_reg_1570_pp2_iter4_reg;
        select_ln34_reg_1570_pp2_iter6_reg <= select_ln34_reg_1570_pp2_iter5_reg;
        select_ln34_reg_1570_pp2_iter7_reg <= select_ln34_reg_1570_pp2_iter6_reg;
        select_ln34_reg_1570_pp2_iter8_reg <= select_ln34_reg_1570_pp2_iter7_reg;
        select_ln34_reg_1570_pp2_iter9_reg <= select_ln34_reg_1570_pp2_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        ii_5_reg_1637 <= ii_5_fu_1144_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        jj_3_reg_1660 <= jj_3_fu_1178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        kk_3_reg_1614 <= kk_3_fu_1110_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        local_A_load_reg_1652 <= local_A_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        local_B_load_reg_1675 <= local_B_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) & (icmp_ln38_fu_1172_p2 == 1'd0))) begin
        local_C_addr_2_reg_1670 <= zext_ln39_5_fu_1203_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_cast30_reg_1399[29 : 0] <= p_cast30_fu_566_p1[29 : 0];
        p_cast31_reg_1394[29 : 0] <= p_cast31_fu_552_p1[29 : 0];
        p_cast_reg_1404[29 : 0] <= p_cast_fu_580_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state56) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter13 == 1'b1) & (icmp_ln26_reg_1511_pp1_iter12_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1) & (icmp_ln19_reg_1447_pp0_iter12_reg == 1'd0)))) begin
        reg_529 <= grp_fu_525_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state56) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln42_reg_1685_pp3_iter1_reg == 1'd0)))) begin
        reg_536 <= local_C_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_584_p2 == 1'd0))) begin
        select_ln16_reg_1424 <= select_ln16_fu_618_p3;
        select_ln17_reg_1419 <= select_ln17_fu_610_p3;
        zext_ln17_reg_1435[11 : 0] <= zext_ln17_fu_626_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln19_fu_647_p2 == 1'd0))) begin
        select_ln22_1_reg_1471 <= select_ln22_1_fu_679_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln26_fu_811_p2 == 1'd0))) begin
        select_ln29_1_reg_1525 <= select_ln29_1_fu_852_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln31_fu_966_p2 == 1'd0))) begin
        select_ln34_1_reg_1575 <= select_ln34_1_fu_1008_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln42_fu_1225_p2 == 1'd0))) begin
        select_ln45_1_reg_1700 <= select_ln45_1_fu_1257_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        tmp_3_reg_1680 <= grp_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (tmp_29_fu_782_p3 == 1'd0))) begin
        zext_ln24_reg_1506[11 : 0] <= zext_ln24_fu_790_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) & (icmp_ln36_fu_1104_p2 == 1'd0))) begin
        zext_ln37_reg_1624[14 : 7] <= zext_ln37_fu_1128_p1[14 : 7];
        zext_ln39_reg_1619[7 : 0] <= zext_ln39_fu_1116_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (icmp_ln37_fu_1138_p2 == 1'd0))) begin
        zext_ln39_1_reg_1642[14 : 7] <= zext_ln39_1_fu_1158_p1[14 : 7];
    end
end

always @ (*) begin
    if ((icmp_ln19_fu_647_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln26_fu_811_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state20 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state20 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln31_fu_966_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state36 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state36 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln42_fu_1225_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state65 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state65 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_584_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter7 == 1'b0) & (ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln26_reg_1511 == 1'd0))) begin
        ap_phi_mux_ii1_0_phi_fu_404_p4 = select_ln29_1_reg_1525;
    end else begin
        ap_phi_mux_ii1_0_phi_fu_404_p4 = ii1_0_reg_400;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0) & (icmp_ln42_reg_1685 == 1'd0))) begin
        ap_phi_mux_ii7_0_phi_fu_503_p4 = select_ln45_1_reg_1700;
    end else begin
        ap_phi_mux_ii7_0_phi_fu_503_p4 = ii7_0_reg_499;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln19_reg_1447 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_ii_0_phi_fu_359_p4 = select_ln22_1_reg_1471;
    end else begin
        ap_phi_mux_ii_0_phi_fu_359_p4 = ii_0_reg_355;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0) & (icmp_ln42_reg_1685 == 1'd0))) begin
        ap_phi_mux_indvar_flatten24_phi_fu_492_p4 = add_ln42_reg_1689;
    end else begin
        ap_phi_mux_indvar_flatten24_phi_fu_492_p4 = indvar_flatten24_reg_488;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0) & (icmp_ln31_reg_1561 == 1'd0))) begin
        ap_phi_mux_kk2_0_phi_fu_437_p4 = select_ln34_1_reg_1575;
    end else begin
        ap_phi_mux_kk2_0_phi_fu_437_p4 = kk2_0_reg_433;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_584_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (empty_17_reg_1586_pp2_iter1_reg == 1'd1))) begin
        gmem_ARADDR = zext_ln34_4_fu_1069_p1;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (empty_12_reg_1536_pp1_iter1_reg == 1'd1))) begin
        gmem_ARADDR = zext_ln29_4_fu_913_p1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (empty_6_reg_1477_pp0_iter1_reg == 1'd1))) begin
        gmem_ARADDR = zext_ln22_4_fu_747_p1;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (empty_17_reg_1586_pp2_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (empty_12_reg_1536_pp1_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (empty_6_reg_1477_pp0_iter1_reg == 1'd1)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (empty_27_reg_1711_pp3_iter1_reg == 1'd1))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter8 == 1'b1) & (empty_31_reg_1730_pp3_iter7_reg == 1'd1))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1) & (icmp_ln31_reg_1561_pp2_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter9 == 1'b1) & (icmp_ln26_reg_1511_pp1_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln19_reg_1447_pp0_iter8_reg == 1'd0)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1) & (icmp_ln42_reg_1685_pp3_iter2_reg == 1'd0))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (empty_17_reg_1586_pp2_iter1_reg == 1'd1)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (empty_12_reg_1536_pp1_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_6_reg_1477_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (empty_27_reg_1711_pp3_iter1_reg == 1'd1))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter8 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (empty_31_reg_1730_pp3_iter7_reg == 1'd1))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter9 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (icmp_ln31_reg_1561_pp2_iter8_reg == 1'd0)) | ((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln26_reg_1511_pp1_iter8_reg == 1'd0)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln19_reg_1447_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (icmp_ln42_reg_1685_pp3_iter2_reg == 1'd0))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state55) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_525_ce = 1'b1;
    end else begin
        grp_fu_525_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_525_p0 = local_A_load_reg_1652;
    end else if (((ap_enable_reg_pp1_iter10 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_525_p0 = gmem_addr_2_read_reg_1556;
    end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_525_p0 = gmem_addr_read_reg_1497;
    end else begin
        grp_fu_525_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_525_p1 = local_B_load_reg_1675;
    end else if (((ap_enable_reg_pp1_iter10 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_525_p1 = alpha;
    end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_525_p1 = beta;
    end else begin
        grp_fu_525_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        local_A_address0 = zext_ln39_2_fu_1167_p1;
    end else if (((ap_enable_reg_pp1_iter14 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        local_A_address0 = zext_ln29_6_fu_943_p1;
    end else begin
        local_A_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter14 == 1'b1)))) begin
        local_A_ce0 = 1'b1;
    end else begin
        local_A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter14 == 1'b1) & (icmp_ln26_reg_1511_pp1_iter13_reg == 1'd0))) begin
        local_A_we0 = 1'b1;
    end else begin
        local_A_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        local_B_address0 = zext_ln39_4_fu_1193_p1;
    end else if (((ap_enable_reg_pp2_iter10 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        local_B_address0 = zext_ln34_6_fu_1099_p1;
    end else begin
        local_B_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1)))) begin
        local_B_ce0 = 1'b1;
    end else begin
        local_B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1) & (icmp_ln31_reg_1561_pp2_iter9_reg == 1'd0))) begin
        local_B_we0 = 1'b1;
    end else begin
        local_B_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        local_C_address0 = zext_ln45_5_fu_1342_p1;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state64))) begin
        local_C_address0 = local_C_addr_2_reg_1670;
    end else if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        local_C_address0 = zext_ln22_6_fu_777_p1;
    end else begin
        local_C_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state64) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)))) begin
        local_C_ce0 = 1'b1;
    end else begin
        local_C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        local_C_d0 = tmp_3_reg_1680;
    end else if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        local_C_d0 = reg_529;
    end else begin
        local_C_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1) & (icmp_ln19_reg_1447_pp0_iter13_reg == 1'd0)))) begin
        local_C_we0 = 1'b1;
    end else begin
        local_C_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_584_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln19_fu_647_p2 == 1'd1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln19_fu_647_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (tmp_29_fu_782_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln26_fu_811_p2 == 1'd1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln26_fu_811_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln31_fu_966_p2 == 1'd1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter10 == 1'b1) & (ap_enable_reg_pp2_iter9 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter10 == 1'b1) & (ap_enable_reg_pp2_iter9 == 1'b0)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln31_fu_966_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((1'b1 == ap_CS_fsm_state48) & (icmp_ln36_fu_1104_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & (icmp_ln37_fu_1138_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((1'b1 == ap_CS_fsm_state51) & (icmp_ln38_fu_1172_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln42_fu_1225_p2 == 1'd1)) & ~((ap_enable_reg_pp3_iter7 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter8 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln42_fu_1225_p2 == 1'd1)) | ((ap_enable_reg_pp3_iter7 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter8 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln16_fu_590_p2 = (indvar_flatten31_reg_311 + 9'd1);

assign add_ln19_fu_653_p2 = (indvar_flatten_reg_344 + 15'd1);

assign add_ln22_1_fu_714_p2 = (select_ln16_reg_1424 + zext_ln22_1_fu_711_p1);

assign add_ln22_2_fu_733_p2 = (select_ln22_2_fu_727_p3 + zext_ln17_reg_1435);

assign add_ln22_3_fu_742_p2 = (zext_ln22_3_fu_738_p1 + p_cast_reg_1404);

assign add_ln22_4_fu_771_p2 = (zext_ln22_5_fu_768_p1 + zext_ln22_2_fu_764_p1);

assign add_ln22_fu_634_p2 = (zext_ln22_fu_630_p1 + select_ln16_reg_1424);

assign add_ln26_fu_817_p2 = (indvar_flatten8_reg_389 + 15'd1);

assign add_ln29_1_fu_847_p2 = (select_ln16_reg_1424 + zext_ln29_1_fu_843_p1);

assign add_ln29_2_fu_876_p2 = (select_ln29_2_fu_868_p3 + zext_ln24_reg_1506);

assign add_ln29_3_fu_908_p2 = (zext_ln29_3_fu_905_p1 + p_cast30_reg_1399);

assign add_ln29_4_fu_937_p2 = (zext_ln29_5_fu_934_p1 + zext_ln29_2_fu_930_p1);

assign add_ln29_fu_798_p2 = (zext_ln29_fu_794_p1 + select_ln16_reg_1424);

assign add_ln31_fu_972_p2 = (indvar_flatten16_reg_422 + 15'd1);

assign add_ln34_1_fu_1002_p2 = (k_0_reg_377 + zext_ln34_1_fu_998_p1);

assign add_ln34_2_fu_1032_p2 = (select_ln34_2_fu_1024_p3 + zext_ln17_reg_1435);

assign add_ln34_3_fu_1064_p2 = (zext_ln34_3_fu_1061_p1 + p_cast31_reg_1394);

assign add_ln34_4_fu_1093_p2 = (zext_ln34_5_fu_1090_p1 + zext_ln34_2_fu_1086_p1);

assign add_ln34_fu_952_p2 = (zext_ln34_fu_948_p1 + k_0_reg_377);

assign add_ln39_1_fu_1188_p2 = (zext_ln37_reg_1624 + zext_ln39_3_fu_1184_p1);

assign add_ln39_2_fu_1198_p2 = (zext_ln39_1_reg_1642 + zext_ln39_3_fu_1184_p1);

assign add_ln39_fu_1162_p2 = (zext_ln39_reg_1619 + zext_ln39_1_fu_1158_p1);

assign add_ln42_fu_1231_p2 = (ap_phi_mux_indvar_flatten24_phi_fu_492_p4 + 15'd1);

assign add_ln45_1_fu_1269_p2 = (select_ln16_reg_1424 + zext_ln45_2_fu_1265_p1);

assign add_ln45_2_fu_1290_p2 = (select_ln45_2_fu_1282_p3 + zext_ln17_reg_1435);

assign add_ln45_3_fu_1336_p2 = (zext_ln45_4_fu_1333_p1 + zext_ln45_1_fu_1326_p1);

assign add_ln45_4_fu_1347_p2 = (zext_ln45_3_fu_1330_p1 + p_cast_reg_1404);

assign add_ln45_fu_1212_p2 = (zext_ln45_fu_1208_p1 + select_ln16_reg_1424);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd27];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln19_reg_1447_pp0_iter8_reg == 1'd0)) | ((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln19_reg_1447_pp0_iter8_reg == 1'd0)) | ((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b1) & (icmp_ln26_reg_1511_pp1_iter8_reg == 1'd0)) | ((1'b1 == ap_block_state22_io) & (ap_enable_reg_pp1_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b1) & (icmp_ln26_reg_1511_pp1_iter8_reg == 1'd0)) | ((1'b1 == ap_block_state22_io) & (ap_enable_reg_pp1_iter2 == 1'b1)));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b1) & (icmp_ln31_reg_1561_pp2_iter8_reg == 1'd0)) | ((1'b1 == ap_block_state38_io) & (ap_enable_reg_pp2_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b1) & (icmp_ln31_reg_1561_pp2_iter8_reg == 1'd0)) | ((1'b1 == ap_block_state38_io) & (ap_enable_reg_pp2_iter2 == 1'b1)));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b1) & (empty_31_reg_1730_pp3_iter7_reg == 1'd1));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b1) & (empty_31_reg_1730_pp3_iter7_reg == 1'd1)) | ((1'b1 == ap_block_state68_io) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b1 == ap_block_state67_io) & (ap_enable_reg_pp3_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b1) & (empty_31_reg_1730_pp3_iter7_reg == 1'd1)) | ((1'b1 == ap_block_state68_io) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b1 == ap_block_state67_io) & (ap_enable_reg_pp3_iter2 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage0_iter9 = ((gmem_RVALID == 1'b0) & (icmp_ln19_reg_1447_pp0_iter8_reg == 1'd0));
end

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_io = ((gmem_ARREADY == 1'b0) & (empty_12_reg_1536_pp1_iter1_reg == 1'd1));
end

assign ap_block_state22_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp1_stage0_iter9 = ((gmem_RVALID == 1'b0) & (icmp_ln26_reg_1511_pp1_iter8_reg == 1'd0));
end

assign ap_block_state30_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state38_io = ((gmem_ARREADY == 1'b0) & (empty_17_reg_1586_pp2_iter1_reg == 1'd1));
end

assign ap_block_state38_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state45_pp2_stage0_iter9 = ((gmem_RVALID == 1'b0) & (icmp_ln31_reg_1561_pp2_iter8_reg == 1'd0));
end

assign ap_block_state46_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((gmem_ARREADY == 1'b0) & (empty_6_reg_1477_pp0_iter1_reg == 1'd1));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state67_io = ((gmem_AWREADY == 1'b0) & (empty_27_reg_1711_pp3_iter1_reg == 1'd1));
end

assign ap_block_state67_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state68_io = ((gmem_WREADY == 1'b0) & (icmp_ln42_reg_1685_pp3_iter2_reg == 1'd0));
end

assign ap_block_state68_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp3_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state73_pp3_stage0_iter8 = ((gmem_BVALID == 1'b0) & (empty_31_reg_1730_pp3_iter7_reg == 1'd1));
end

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_11_fu_881_p1 = indvar_flatten8_reg_389[6:0];

assign empty_12_fu_893_p2 = ((tmp_31_fu_885_p3 == 15'd0) ? 1'b1 : 1'b0);

assign empty_16_fu_1037_p1 = indvar_flatten16_reg_422[6:0];

assign empty_17_fu_1049_p2 = ((tmp_33_fu_1041_p3 == 15'd0) ? 1'b1 : 1'b0);

assign empty_26_fu_1295_p1 = ap_phi_mux_indvar_flatten24_phi_fu_492_p4[6:0];

assign empty_27_fu_1307_p2 = ((tmp_30_fu_1299_p3 == 15'd0) ? 1'b1 : 1'b0);

assign empty_30_fu_1352_p1 = add_ln42_reg_1689[6:0];

assign empty_31_fu_1363_p2 = ((tmp_32_fu_1355_p3 == 15'd0) ? 1'b1 : 1'b0);

assign empty_5_fu_687_p1 = indvar_flatten_reg_344[6:0];

assign empty_6_fu_699_p2 = ((tmp_28_fu_691_p3 == 15'd0) ? 1'b1 : 1'b0);

assign gmem_AWADDR = zext_ln45_6_fu_1369_p1;

assign i_fu_596_p2 = (i_0_reg_322 + 12'd128);

assign icmp_ln16_fu_584_p2 = ((indvar_flatten31_reg_311 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_647_p2 = ((indvar_flatten_reg_344 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_665_p2 = ((jj_0_reg_366 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_811_p2 = ((indvar_flatten8_reg_389 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_829_p2 = ((kk_0_reg_411 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_966_p2 = ((indvar_flatten16_reg_422 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_984_p2 = ((jj3_0_reg_444 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_1104_p2 = ((kk4_0_reg_455 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_1138_p2 = ((ii5_0_reg_466 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_1172_p2 = ((jj6_0_reg_477 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_1225_p2 = ((ap_phi_mux_indvar_flatten24_phi_fu_492_p4 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_1243_p2 = ((jj8_0_reg_510 == 8'd128) ? 1'b1 : 1'b0);

assign ii_3_fu_1237_p2 = (8'd1 + ap_phi_mux_ii7_0_phi_fu_503_p4);

assign ii_4_fu_823_p2 = (8'd1 + ap_phi_mux_ii1_0_phi_fu_404_p4);

assign ii_5_fu_1144_p2 = (ii5_0_reg_466 + 8'd1);

assign ii_fu_659_p2 = (8'd1 + ap_phi_mux_ii_0_phi_fu_359_p4);

assign j_fu_1379_p2 = (select_ln17_reg_1419 + 12'd128);

assign jj_1_fu_1313_p2 = (8'd1 + select_ln45_fu_1249_p3);

assign jj_2_fu_1055_p2 = (select_ln34_fu_990_p3 + 8'd1);

assign jj_3_fu_1178_p2 = (jj6_0_reg_477 + 8'd1);

assign jj_fu_705_p2 = (select_ln22_fu_671_p3 + 8'd1);

assign k_fu_1132_p2 = (k_0_reg_377 + 12'd128);

assign kk_2_fu_978_p2 = (8'd1 + ap_phi_mux_kk2_0_phi_fu_437_p4);

assign kk_3_fu_1110_p2 = (kk4_0_reg_455 + 8'd1);

assign kk_fu_899_p2 = (select_ln29_fu_835_p3 + 8'd1);

assign p_cast30_fu_566_p1 = tmp_25_fu_556_p4;

assign p_cast31_fu_552_p1 = tmp_24_fu_542_p4;

assign p_cast_fu_580_p1 = tmp_26_fu_570_p4;

assign select_ln16_fu_618_p3 = ((tmp_27_fu_602_p3[0:0] === 1'b1) ? i_fu_596_p2 : i_0_reg_322);

assign select_ln17_fu_610_p3 = ((tmp_27_fu_602_p3[0:0] === 1'b1) ? 12'd0 : j_0_reg_333);

assign select_ln22_1_fu_679_p3 = ((icmp_ln20_fu_665_p2[0:0] === 1'b1) ? ii_fu_659_p2 : ap_phi_mux_ii_0_phi_fu_359_p4);

assign select_ln22_2_fu_727_p3 = ((icmp_ln20_reg_1461[0:0] === 1'b1) ? tmp_15_mid1_fu_719_p3 : tmp_4_reg_1442);

assign select_ln22_fu_671_p3 = ((icmp_ln20_fu_665_p2[0:0] === 1'b1) ? 8'd0 : jj_0_reg_366);

assign select_ln29_1_fu_852_p3 = ((icmp_ln27_fu_829_p2[0:0] === 1'b1) ? ii_4_fu_823_p2 : ap_phi_mux_ii1_0_phi_fu_404_p4);

assign select_ln29_2_fu_868_p3 = ((icmp_ln27_fu_829_p2[0:0] === 1'b1) ? tmp_16_mid1_fu_860_p3 : tmp_16_fu_803_p3);

assign select_ln29_fu_835_p3 = ((icmp_ln27_fu_829_p2[0:0] === 1'b1) ? 8'd0 : kk_0_reg_411);

assign select_ln34_1_fu_1008_p3 = ((icmp_ln32_fu_984_p2[0:0] === 1'b1) ? kk_2_fu_978_p2 : ap_phi_mux_kk2_0_phi_fu_437_p4);

assign select_ln34_2_fu_1024_p3 = ((icmp_ln32_fu_984_p2[0:0] === 1'b1) ? tmp_18_mid1_fu_1016_p3 : tmp_18_fu_958_p3);

assign select_ln34_fu_990_p3 = ((icmp_ln32_fu_984_p2[0:0] === 1'b1) ? 8'd0 : jj3_0_reg_444);

assign select_ln45_1_fu_1257_p3 = ((icmp_ln43_fu_1243_p2[0:0] === 1'b1) ? ii_3_fu_1237_p2 : ap_phi_mux_ii7_0_phi_fu_503_p4);

assign select_ln45_2_fu_1282_p3 = ((icmp_ln43_fu_1243_p2[0:0] === 1'b1) ? tmp_17_mid1_fu_1274_p3 : tmp_17_fu_1217_p3);

assign select_ln45_fu_1249_p3 = ((icmp_ln43_fu_1243_p2[0:0] === 1'b1) ? 8'd0 : jj8_0_reg_510);

assign tmp_15_fu_757_p3 = {{select_ln22_1_reg_1471_pp0_iter13_reg}, {7'd0}};

assign tmp_15_mid1_fu_719_p3 = {{add_ln22_1_fu_714_p2}, {11'd0}};

assign tmp_16_fu_803_p3 = {{add_ln29_fu_798_p2}, {11'd0}};

assign tmp_16_mid1_fu_860_p3 = {{add_ln29_1_fu_847_p2}, {11'd0}};

assign tmp_17_fu_1217_p3 = {{add_ln45_fu_1212_p2}, {11'd0}};

assign tmp_17_mid1_fu_1274_p3 = {{add_ln45_1_fu_1269_p2}, {11'd0}};

assign tmp_18_fu_958_p3 = {{add_ln34_fu_952_p2}, {11'd0}};

assign tmp_18_mid1_fu_1016_p3 = {{add_ln34_1_fu_1002_p2}, {11'd0}};

assign tmp_19_fu_923_p3 = {{select_ln29_1_reg_1525_pp1_iter13_reg}, {7'd0}};

assign tmp_20_fu_1319_p3 = {{select_ln45_1_reg_1700}, {7'd0}};

assign tmp_21_fu_1079_p3 = {{select_ln34_1_reg_1575_pp2_iter9_reg}, {7'd0}};

assign tmp_22_fu_1120_p3 = {{kk4_0_reg_455}, {7'd0}};

assign tmp_23_fu_1150_p3 = {{ii5_0_reg_466}, {7'd0}};

assign tmp_24_fu_542_p4 = {{B[31:2]}};

assign tmp_25_fu_556_p4 = {{A[31:2]}};

assign tmp_26_fu_570_p4 = {{C[31:2]}};

assign tmp_27_fu_602_p3 = j_0_reg_333[32'd11];

assign tmp_28_fu_691_p3 = {{8'd0}, {empty_5_fu_687_p1}};

assign tmp_29_fu_782_p3 = k_0_reg_377[32'd11];

assign tmp_30_fu_1299_p3 = {{8'd0}, {empty_26_fu_1295_p1}};

assign tmp_31_fu_885_p3 = {{8'd0}, {empty_11_fu_881_p1}};

assign tmp_32_fu_1355_p3 = {{8'd0}, {empty_30_fu_1352_p1}};

assign tmp_33_fu_1041_p3 = {{8'd0}, {empty_16_fu_1037_p1}};

assign tmp_4_fu_639_p3 = {{add_ln22_fu_634_p2}, {11'd0}};

assign zext_ln17_fu_626_p1 = select_ln17_fu_610_p3;

assign zext_ln22_1_fu_711_p1 = ii_reg_1456;

assign zext_ln22_2_fu_764_p1 = tmp_15_fu_757_p3;

assign zext_ln22_3_fu_738_p1 = add_ln22_2_fu_733_p2;

assign zext_ln22_4_fu_747_p1 = add_ln22_3_reg_1486;

assign zext_ln22_5_fu_768_p1 = select_ln22_reg_1466_pp0_iter13_reg;

assign zext_ln22_6_fu_777_p1 = add_ln22_4_fu_771_p2;

assign zext_ln22_fu_630_p1 = ap_phi_mux_ii_0_phi_fu_359_p4;

assign zext_ln24_fu_790_p1 = k_0_reg_377;

assign zext_ln29_1_fu_843_p1 = ii_4_fu_823_p2;

assign zext_ln29_2_fu_930_p1 = tmp_19_fu_923_p3;

assign zext_ln29_3_fu_905_p1 = add_ln29_2_reg_1531;

assign zext_ln29_4_fu_913_p1 = add_ln29_3_reg_1545;

assign zext_ln29_5_fu_934_p1 = select_ln29_reg_1520_pp1_iter13_reg;

assign zext_ln29_6_fu_943_p1 = add_ln29_4_fu_937_p2;

assign zext_ln29_fu_794_p1 = ap_phi_mux_ii1_0_phi_fu_404_p4;

assign zext_ln34_1_fu_998_p1 = kk_2_fu_978_p2;

assign zext_ln34_2_fu_1086_p1 = tmp_21_fu_1079_p3;

assign zext_ln34_3_fu_1061_p1 = add_ln34_2_reg_1581;

assign zext_ln34_4_fu_1069_p1 = add_ln34_3_reg_1595;

assign zext_ln34_5_fu_1090_p1 = select_ln34_reg_1570_pp2_iter9_reg;

assign zext_ln34_6_fu_1099_p1 = add_ln34_4_fu_1093_p2;

assign zext_ln34_fu_948_p1 = ap_phi_mux_kk2_0_phi_fu_437_p4;

assign zext_ln37_fu_1128_p1 = tmp_22_fu_1120_p3;

assign zext_ln39_1_fu_1158_p1 = tmp_23_fu_1150_p3;

assign zext_ln39_2_fu_1167_p1 = add_ln39_fu_1162_p2;

assign zext_ln39_3_fu_1184_p1 = jj6_0_reg_477;

assign zext_ln39_4_fu_1193_p1 = add_ln39_1_fu_1188_p2;

assign zext_ln39_5_fu_1203_p1 = add_ln39_2_fu_1198_p2;

assign zext_ln39_fu_1116_p1 = kk4_0_reg_455;

assign zext_ln45_1_fu_1326_p1 = tmp_20_fu_1319_p3;

assign zext_ln45_2_fu_1265_p1 = ii_3_fu_1237_p2;

assign zext_ln45_3_fu_1330_p1 = add_ln45_2_reg_1706;

assign zext_ln45_4_fu_1333_p1 = select_ln45_reg_1695;

assign zext_ln45_5_fu_1342_p1 = add_ln45_3_fu_1336_p2;

assign zext_ln45_6_fu_1369_p1 = add_ln45_4_reg_1725;

assign zext_ln45_fu_1208_p1 = ap_phi_mux_ii7_0_phi_fu_503_p4;

always @ (posedge ap_clk) begin
    p_cast31_reg_1394[30] <= 1'b0;
    p_cast30_reg_1399[30] <= 1'b0;
    p_cast_reg_1404[30] <= 1'b0;
    zext_ln17_reg_1435[22:12] <= 11'b00000000000;
    tmp_4_reg_1442[10:0] <= 11'b00000000000;
    zext_ln24_reg_1506[22:12] <= 11'b00000000000;
    zext_ln39_reg_1619[15:8] <= 8'b00000000;
    zext_ln37_reg_1624[6:0] <= 7'b0000000;
    zext_ln37_reg_1624[15] <= 1'b0;
    zext_ln39_1_reg_1642[6:0] <= 7'b0000000;
    zext_ln39_1_reg_1642[15] <= 1'b0;
end

endmodule //kernel_gemm
