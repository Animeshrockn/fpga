// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module compute (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        flag,
        local_A_0_V_address0,
        local_A_0_V_ce0,
        local_A_0_V_q0,
        local_B_V_address0,
        local_B_V_ce0,
        local_B_V_q0,
        local_C_V_address0,
        local_C_V_ce0,
        local_C_V_q0,
        local_C_V_address1,
        local_C_V_ce1,
        local_C_V_we1,
        local_C_V_d1,
        alpha
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state21 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] flag;
output  [3:0] local_A_0_V_address0;
output   local_A_0_V_ce0;
input  [511:0] local_A_0_V_q0;
output  [3:0] local_B_V_address0;
output   local_B_V_ce0;
input  [511:0] local_B_V_q0;
output  [3:0] local_C_V_address0;
output   local_C_V_ce0;
input  [511:0] local_C_V_q0;
output  [3:0] local_C_V_address1;
output   local_C_V_ce1;
output   local_C_V_we1;
output  [511:0] local_C_V_d1;
input  [31:0] alpha;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg local_A_0_V_ce0;
reg local_B_V_ce0;
reg local_C_V_ce0;
reg local_C_V_ce1;
reg local_C_V_we1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [8:0] indvar_flatten_reg_178;
reg   [4:0] kk_0_reg_189;
reg   [4:0] ii_0_reg_200;
wire   [0:0] flag_read_read_fu_130_p2;
wire   [0:0] icmp_ln28_fu_343_p2;
reg   [0:0] icmp_ln28_reg_1050;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter1_reg;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter2_reg;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter3_reg;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter4_reg;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter5_reg;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter6_reg;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter7_reg;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter8_reg;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter9_reg;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter10_reg;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter11_reg;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter12_reg;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter13_reg;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter14_reg;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter15_reg;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter16_reg;
reg   [0:0] icmp_ln28_reg_1050_pp0_iter17_reg;
wire   [8:0] add_ln28_fu_349_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [4:0] select_ln33_1_fu_375_p3;
reg   [4:0] select_ln33_1_reg_1059;
reg   [4:0] select_ln33_1_reg_1059_pp0_iter1_reg;
reg   [4:0] select_ln33_1_reg_1059_pp0_iter2_reg;
reg   [4:0] select_ln33_1_reg_1059_pp0_iter3_reg;
reg   [4:0] select_ln33_1_reg_1059_pp0_iter4_reg;
wire   [3:0] trunc_ln33_fu_383_p1;
reg   [3:0] trunc_ln33_reg_1065;
reg   [3:0] local_C_V_addr_reg_1075;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter1_reg;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter2_reg;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter3_reg;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter4_reg;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter5_reg;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter6_reg;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter7_reg;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter8_reg;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter9_reg;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter10_reg;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter11_reg;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter12_reg;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter13_reg;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter14_reg;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter15_reg;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter16_reg;
reg   [3:0] local_C_V_addr_reg_1075_pp0_iter17_reg;
wire   [4:0] ii_fu_393_p2;
wire   [9:0] sub_ln681_2_fu_478_p2;
reg   [9:0] sub_ln681_2_reg_1086;
wire   [511:0] lshr_ln681_fu_488_p2;
reg   [511:0] lshr_ln681_reg_1091;
wire   [31:0] trunc_ln34_fu_508_p1;
reg   [31:0] trunc_ln34_reg_1096;
wire   [31:0] trunc_ln681_fu_520_p1;
reg   [31:0] trunc_ln681_reg_1111;
wire   [31:0] grp_fu_275_p2;
reg   [31:0] tmp_2_reg_1116;
reg   [31:0] p_Result_2_1_reg_1136;
reg   [31:0] p_Result_2_2_reg_1141;
reg   [31:0] p_Result_2_3_reg_1146;
reg   [31:0] p_Result_2_4_reg_1151;
reg   [31:0] p_Result_2_5_reg_1156;
reg   [31:0] p_Result_2_6_reg_1161;
reg   [31:0] p_Result_2_7_reg_1166;
reg   [31:0] p_Result_2_8_reg_1171;
reg   [31:0] p_Result_2_9_reg_1176;
reg   [31:0] p_Result_2_s_reg_1181;
reg   [31:0] p_Result_2_10_reg_1186;
reg   [31:0] p_Result_2_11_reg_1191;
reg   [31:0] p_Result_2_12_reg_1196;
reg   [31:0] p_Result_2_13_reg_1201;
reg   [31:0] p_Result_2_14_reg_1206;
wire   [31:0] trunc_ln681_1_fu_738_p1;
reg   [31:0] trunc_ln681_1_reg_1291;
wire   [31:0] grp_fu_279_p2;
reg   [31:0] tmp_s_reg_1296;
reg   [31:0] p_Result_3_1_reg_1301;
wire   [31:0] grp_fu_283_p2;
reg   [31:0] tmp_3_1_reg_1306;
reg   [31:0] p_Result_3_2_reg_1311;
wire   [31:0] grp_fu_287_p2;
reg   [31:0] tmp_3_2_reg_1316;
reg   [31:0] p_Result_3_3_reg_1321;
wire   [31:0] grp_fu_291_p2;
reg   [31:0] tmp_3_3_reg_1326;
reg   [31:0] p_Result_3_4_reg_1331;
wire   [31:0] grp_fu_295_p2;
reg   [31:0] tmp_3_4_reg_1336;
reg   [31:0] p_Result_3_5_reg_1341;
wire   [31:0] grp_fu_299_p2;
reg   [31:0] tmp_3_5_reg_1346;
reg   [31:0] p_Result_3_6_reg_1351;
wire   [31:0] grp_fu_303_p2;
reg   [31:0] tmp_3_6_reg_1356;
reg   [31:0] p_Result_3_7_reg_1361;
wire   [31:0] grp_fu_307_p2;
reg   [31:0] tmp_3_7_reg_1366;
reg   [31:0] p_Result_3_8_reg_1371;
wire   [31:0] grp_fu_311_p2;
reg   [31:0] tmp_3_8_reg_1376;
reg   [31:0] p_Result_3_9_reg_1381;
wire   [31:0] grp_fu_315_p2;
reg   [31:0] tmp_3_9_reg_1386;
reg   [31:0] p_Result_3_s_reg_1391;
wire   [31:0] grp_fu_319_p2;
reg   [31:0] tmp_3_s_reg_1396;
reg   [31:0] p_Result_3_10_reg_1401;
wire   [31:0] grp_fu_323_p2;
reg   [31:0] tmp_3_10_reg_1406;
reg   [31:0] p_Result_3_11_reg_1411;
wire   [31:0] grp_fu_327_p2;
reg   [31:0] tmp_3_11_reg_1416;
reg   [31:0] p_Result_3_12_reg_1421;
wire   [31:0] grp_fu_331_p2;
reg   [31:0] tmp_3_12_reg_1426;
reg   [31:0] p_Result_3_13_reg_1431;
wire   [31:0] grp_fu_335_p2;
reg   [31:0] tmp_3_13_reg_1436;
reg   [31:0] p_Result_3_14_reg_1441;
wire   [31:0] grp_fu_339_p2;
reg   [31:0] tmp_3_14_reg_1446;
wire   [31:0] grp_fu_211_p2;
reg   [31:0] tmp_4_reg_1531;
wire   [31:0] grp_fu_215_p2;
reg   [31:0] tmp_4_1_reg_1536;
wire   [31:0] grp_fu_219_p2;
reg   [31:0] tmp_4_2_reg_1541;
wire   [31:0] grp_fu_223_p2;
reg   [31:0] tmp_4_3_reg_1546;
wire   [31:0] grp_fu_227_p2;
reg   [31:0] tmp_4_4_reg_1551;
wire   [31:0] grp_fu_231_p2;
reg   [31:0] tmp_4_5_reg_1556;
wire   [31:0] grp_fu_235_p2;
reg   [31:0] tmp_4_6_reg_1561;
wire   [31:0] grp_fu_239_p2;
reg   [31:0] tmp_4_7_reg_1566;
wire   [31:0] grp_fu_243_p2;
reg   [31:0] tmp_4_8_reg_1571;
wire   [31:0] grp_fu_247_p2;
reg   [31:0] tmp_4_9_reg_1576;
wire   [31:0] grp_fu_251_p2;
reg   [31:0] tmp_4_s_reg_1581;
wire   [31:0] grp_fu_255_p2;
reg   [31:0] tmp_4_10_reg_1586;
wire   [31:0] grp_fu_259_p2;
reg   [31:0] tmp_4_11_reg_1591;
wire   [31:0] grp_fu_263_p2;
reg   [31:0] tmp_4_12_reg_1596;
wire   [31:0] grp_fu_267_p2;
reg   [31:0] tmp_4_13_reg_1601;
wire   [31:0] grp_fu_271_p2;
reg   [31:0] tmp_4_14_reg_1606;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg   [4:0] ap_phi_mux_kk_0_phi_fu_193_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln34_fu_387_p1;
wire   [63:0] zext_ln33_fu_516_p1;
wire   [31:0] grp_fu_211_p0;
wire   [31:0] grp_fu_215_p0;
wire   [31:0] grp_fu_219_p0;
wire   [31:0] grp_fu_223_p0;
wire   [31:0] grp_fu_227_p0;
wire   [31:0] grp_fu_231_p0;
wire   [31:0] grp_fu_235_p0;
wire   [31:0] grp_fu_239_p0;
wire   [31:0] grp_fu_243_p0;
wire   [31:0] grp_fu_247_p0;
wire   [31:0] grp_fu_251_p0;
wire   [31:0] grp_fu_255_p0;
wire   [31:0] grp_fu_259_p0;
wire   [31:0] grp_fu_263_p0;
wire   [31:0] grp_fu_267_p0;
wire   [31:0] grp_fu_271_p0;
wire   [31:0] grp_fu_275_p0;
wire   [31:0] grp_fu_279_p1;
wire   [31:0] grp_fu_283_p1;
wire   [31:0] grp_fu_287_p1;
wire   [31:0] grp_fu_291_p1;
wire   [31:0] grp_fu_295_p1;
wire   [31:0] grp_fu_299_p1;
wire   [31:0] grp_fu_303_p1;
wire   [31:0] grp_fu_307_p1;
wire   [31:0] grp_fu_311_p1;
wire   [31:0] grp_fu_315_p1;
wire   [31:0] grp_fu_319_p1;
wire   [31:0] grp_fu_323_p1;
wire   [31:0] grp_fu_327_p1;
wire   [31:0] grp_fu_331_p1;
wire   [31:0] grp_fu_335_p1;
wire   [31:0] grp_fu_339_p1;
wire   [0:0] icmp_ln29_fu_355_p2;
wire   [4:0] add_ln28_1_fu_369_p2;
wire   [4:0] select_ln33_fu_361_p3;
wire   [8:0] zext_ln33_1_mid2_v_fu_399_p3;
wire   [8:0] or_ln33_fu_406_p2;
wire   [9:0] zext_ln681_fu_418_p1;
wire   [9:0] zext_ln681_1_fu_422_p1;
wire   [0:0] icmp_ln681_fu_412_p2;
wire   [9:0] sub_ln681_fu_436_p2;
wire   [9:0] sub_ln681_1_fu_448_p2;
reg   [511:0] tmp_fu_426_p4;
wire   [9:0] xor_ln681_fu_442_p2;
wire   [9:0] select_ln681_fu_454_p3;
wire   [9:0] select_ln681_2_fu_470_p3;
wire   [511:0] select_ln681_1_fu_462_p3;
wire   [511:0] zext_ln681_2_fu_484_p1;
wire   [511:0] zext_ln681_3_fu_494_p1;
wire   [511:0] lshr_ln681_1_fu_497_p2;
wire   [511:0] and_ln681_fu_503_p2;
wire   [31:0] bitcast_ln41_31_fu_1001_p1;
wire   [31:0] bitcast_ln41_30_fu_998_p1;
wire   [31:0] bitcast_ln41_29_fu_995_p1;
wire   [31:0] bitcast_ln41_28_fu_992_p1;
wire   [31:0] bitcast_ln41_27_fu_989_p1;
wire   [31:0] bitcast_ln41_26_fu_986_p1;
wire   [31:0] bitcast_ln41_25_fu_983_p1;
wire   [31:0] bitcast_ln41_24_fu_980_p1;
wire   [31:0] bitcast_ln41_23_fu_977_p1;
wire   [31:0] bitcast_ln41_22_fu_974_p1;
wire   [31:0] bitcast_ln41_21_fu_971_p1;
wire   [31:0] bitcast_ln41_20_fu_968_p1;
wire   [31:0] bitcast_ln41_19_fu_965_p1;
wire   [31:0] bitcast_ln41_18_fu_962_p1;
wire   [31:0] bitcast_ln41_17_fu_959_p1;
wire   [31:0] bitcast_ln41_16_fu_956_p1;
wire    ap_CS_fsm_state21;
reg   [2:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_135;
reg    ap_enable_state11_pp0_iter9_stage0;
reg    ap_enable_operation_152;
reg    ap_enable_state12_pp0_iter10_stage0;
reg    ap_enable_operation_335;
reg    ap_enable_state20_pp0_iter18_stage0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
end

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_211_p0),
    .din1(tmp_s_reg_1296),
    .ce(1'b1),
    .dout(grp_fu_211_p2)
);

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_215_p0),
    .din1(tmp_3_1_reg_1306),
    .ce(1'b1),
    .dout(grp_fu_215_p2)
);

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_219_p0),
    .din1(tmp_3_2_reg_1316),
    .ce(1'b1),
    .dout(grp_fu_219_p2)
);

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_223_p0),
    .din1(tmp_3_3_reg_1326),
    .ce(1'b1),
    .dout(grp_fu_223_p2)
);

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_227_p0),
    .din1(tmp_3_4_reg_1336),
    .ce(1'b1),
    .dout(grp_fu_227_p2)
);

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_231_p0),
    .din1(tmp_3_5_reg_1346),
    .ce(1'b1),
    .dout(grp_fu_231_p2)
);

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_235_p0),
    .din1(tmp_3_6_reg_1356),
    .ce(1'b1),
    .dout(grp_fu_235_p2)
);

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_239_p0),
    .din1(tmp_3_7_reg_1366),
    .ce(1'b1),
    .dout(grp_fu_239_p2)
);

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_243_p0),
    .din1(tmp_3_8_reg_1376),
    .ce(1'b1),
    .dout(grp_fu_243_p2)
);

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_247_p0),
    .din1(tmp_3_9_reg_1386),
    .ce(1'b1),
    .dout(grp_fu_247_p2)
);

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_251_p0),
    .din1(tmp_3_s_reg_1396),
    .ce(1'b1),
    .dout(grp_fu_251_p2)
);

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_255_p0),
    .din1(tmp_3_10_reg_1406),
    .ce(1'b1),
    .dout(grp_fu_255_p2)
);

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_259_p0),
    .din1(tmp_3_11_reg_1416),
    .ce(1'b1),
    .dout(grp_fu_259_p2)
);

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_263_p0),
    .din1(tmp_3_12_reg_1426),
    .ce(1'b1),
    .dout(grp_fu_263_p2)
);

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_267_p0),
    .din1(tmp_3_13_reg_1436),
    .ce(1'b1),
    .dout(grp_fu_267_p2)
);

kernel_gemm_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fadd_bkb_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_271_p0),
    .din1(tmp_3_14_reg_1446),
    .ce(1'b1),
    .dout(grp_fu_271_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_275_p0),
    .din1(alpha),
    .ce(1'b1),
    .dout(grp_fu_275_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1116),
    .din1(grp_fu_279_p1),
    .ce(1'b1),
    .dout(grp_fu_279_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1116),
    .din1(grp_fu_283_p1),
    .ce(1'b1),
    .dout(grp_fu_283_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1116),
    .din1(grp_fu_287_p1),
    .ce(1'b1),
    .dout(grp_fu_287_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1116),
    .din1(grp_fu_291_p1),
    .ce(1'b1),
    .dout(grp_fu_291_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1116),
    .din1(grp_fu_295_p1),
    .ce(1'b1),
    .dout(grp_fu_295_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1116),
    .din1(grp_fu_299_p1),
    .ce(1'b1),
    .dout(grp_fu_299_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1116),
    .din1(grp_fu_303_p1),
    .ce(1'b1),
    .dout(grp_fu_303_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1116),
    .din1(grp_fu_307_p1),
    .ce(1'b1),
    .dout(grp_fu_307_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1116),
    .din1(grp_fu_311_p1),
    .ce(1'b1),
    .dout(grp_fu_311_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1116),
    .din1(grp_fu_315_p1),
    .ce(1'b1),
    .dout(grp_fu_315_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1116),
    .din1(grp_fu_319_p1),
    .ce(1'b1),
    .dout(grp_fu_319_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1116),
    .din1(grp_fu_323_p1),
    .ce(1'b1),
    .dout(grp_fu_323_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1116),
    .din1(grp_fu_327_p1),
    .ce(1'b1),
    .dout(grp_fu_327_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1116),
    .din1(grp_fu_331_p1),
    .ce(1'b1),
    .dout(grp_fu_331_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1116),
    .din1(grp_fu_335_p1),
    .ce(1'b1),
    .dout(grp_fu_335_p2)
);

kernel_gemm_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_gemm_fmul_cud_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1116),
    .din1(grp_fu_339_p1),
    .ce(1'b1),
    .dout(grp_fu_339_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (flag_read_read_fu_130_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end else if (((ap_start == 1'b1) & (flag_read_read_fu_130_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (flag_read_read_fu_130_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ii_0_reg_200 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln28_fu_343_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ii_0_reg_200 <= ii_fu_393_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (flag_read_read_fu_130_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_178 <= 9'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln28_fu_343_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_reg_178 <= add_ln28_fu_349_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (flag_read_read_fu_130_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        kk_0_reg_189 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln28_reg_1050 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kk_0_reg_189 <= select_ln33_1_reg_1059;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln28_reg_1050 <= icmp_ln28_fu_343_p2;
        icmp_ln28_reg_1050_pp0_iter1_reg <= icmp_ln28_reg_1050;
        local_C_V_addr_reg_1075_pp0_iter1_reg <= local_C_V_addr_reg_1075;
        select_ln33_1_reg_1059_pp0_iter1_reg <= select_ln33_1_reg_1059;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln28_reg_1050_pp0_iter10_reg <= icmp_ln28_reg_1050_pp0_iter9_reg;
        icmp_ln28_reg_1050_pp0_iter11_reg <= icmp_ln28_reg_1050_pp0_iter10_reg;
        icmp_ln28_reg_1050_pp0_iter12_reg <= icmp_ln28_reg_1050_pp0_iter11_reg;
        icmp_ln28_reg_1050_pp0_iter13_reg <= icmp_ln28_reg_1050_pp0_iter12_reg;
        icmp_ln28_reg_1050_pp0_iter14_reg <= icmp_ln28_reg_1050_pp0_iter13_reg;
        icmp_ln28_reg_1050_pp0_iter15_reg <= icmp_ln28_reg_1050_pp0_iter14_reg;
        icmp_ln28_reg_1050_pp0_iter16_reg <= icmp_ln28_reg_1050_pp0_iter15_reg;
        icmp_ln28_reg_1050_pp0_iter17_reg <= icmp_ln28_reg_1050_pp0_iter16_reg;
        icmp_ln28_reg_1050_pp0_iter2_reg <= icmp_ln28_reg_1050_pp0_iter1_reg;
        icmp_ln28_reg_1050_pp0_iter3_reg <= icmp_ln28_reg_1050_pp0_iter2_reg;
        icmp_ln28_reg_1050_pp0_iter4_reg <= icmp_ln28_reg_1050_pp0_iter3_reg;
        icmp_ln28_reg_1050_pp0_iter5_reg <= icmp_ln28_reg_1050_pp0_iter4_reg;
        icmp_ln28_reg_1050_pp0_iter6_reg <= icmp_ln28_reg_1050_pp0_iter5_reg;
        icmp_ln28_reg_1050_pp0_iter7_reg <= icmp_ln28_reg_1050_pp0_iter6_reg;
        icmp_ln28_reg_1050_pp0_iter8_reg <= icmp_ln28_reg_1050_pp0_iter7_reg;
        icmp_ln28_reg_1050_pp0_iter9_reg <= icmp_ln28_reg_1050_pp0_iter8_reg;
        local_C_V_addr_reg_1075_pp0_iter10_reg <= local_C_V_addr_reg_1075_pp0_iter9_reg;
        local_C_V_addr_reg_1075_pp0_iter11_reg <= local_C_V_addr_reg_1075_pp0_iter10_reg;
        local_C_V_addr_reg_1075_pp0_iter12_reg <= local_C_V_addr_reg_1075_pp0_iter11_reg;
        local_C_V_addr_reg_1075_pp0_iter13_reg <= local_C_V_addr_reg_1075_pp0_iter12_reg;
        local_C_V_addr_reg_1075_pp0_iter14_reg <= local_C_V_addr_reg_1075_pp0_iter13_reg;
        local_C_V_addr_reg_1075_pp0_iter15_reg <= local_C_V_addr_reg_1075_pp0_iter14_reg;
        local_C_V_addr_reg_1075_pp0_iter16_reg <= local_C_V_addr_reg_1075_pp0_iter15_reg;
        local_C_V_addr_reg_1075_pp0_iter17_reg <= local_C_V_addr_reg_1075_pp0_iter16_reg;
        local_C_V_addr_reg_1075_pp0_iter2_reg <= local_C_V_addr_reg_1075_pp0_iter1_reg;
        local_C_V_addr_reg_1075_pp0_iter3_reg <= local_C_V_addr_reg_1075_pp0_iter2_reg;
        local_C_V_addr_reg_1075_pp0_iter4_reg <= local_C_V_addr_reg_1075_pp0_iter3_reg;
        local_C_V_addr_reg_1075_pp0_iter5_reg <= local_C_V_addr_reg_1075_pp0_iter4_reg;
        local_C_V_addr_reg_1075_pp0_iter6_reg <= local_C_V_addr_reg_1075_pp0_iter5_reg;
        local_C_V_addr_reg_1075_pp0_iter7_reg <= local_C_V_addr_reg_1075_pp0_iter6_reg;
        local_C_V_addr_reg_1075_pp0_iter8_reg <= local_C_V_addr_reg_1075_pp0_iter7_reg;
        local_C_V_addr_reg_1075_pp0_iter9_reg <= local_C_V_addr_reg_1075_pp0_iter8_reg;
        select_ln33_1_reg_1059_pp0_iter2_reg <= select_ln33_1_reg_1059_pp0_iter1_reg;
        select_ln33_1_reg_1059_pp0_iter3_reg <= select_ln33_1_reg_1059_pp0_iter2_reg;
        select_ln33_1_reg_1059_pp0_iter4_reg <= select_ln33_1_reg_1059_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln28_fu_343_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_C_V_addr_reg_1075 <= zext_ln34_fu_387_p1;
        trunc_ln33_reg_1065 <= trunc_ln33_fu_383_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln28_reg_1050 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lshr_ln681_reg_1091 <= lshr_ln681_fu_488_p2;
        sub_ln681_2_reg_1086[9 : 1] <= sub_ln681_2_fu_478_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_reg_1050_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_2_10_reg_1186 <= {{local_B_V_q0[383:352]}};
        p_Result_2_11_reg_1191 <= {{local_B_V_q0[415:384]}};
        p_Result_2_12_reg_1196 <= {{local_B_V_q0[447:416]}};
        p_Result_2_13_reg_1201 <= {{local_B_V_q0[479:448]}};
        p_Result_2_14_reg_1206 <= {{local_B_V_q0[511:480]}};
        p_Result_2_1_reg_1136 <= {{local_B_V_q0[63:32]}};
        p_Result_2_2_reg_1141 <= {{local_B_V_q0[95:64]}};
        p_Result_2_3_reg_1146 <= {{local_B_V_q0[127:96]}};
        p_Result_2_4_reg_1151 <= {{local_B_V_q0[159:128]}};
        p_Result_2_5_reg_1156 <= {{local_B_V_q0[191:160]}};
        p_Result_2_6_reg_1161 <= {{local_B_V_q0[223:192]}};
        p_Result_2_7_reg_1166 <= {{local_B_V_q0[255:224]}};
        p_Result_2_8_reg_1171 <= {{local_B_V_q0[287:256]}};
        p_Result_2_9_reg_1176 <= {{local_B_V_q0[319:288]}};
        p_Result_2_s_reg_1181 <= {{local_B_V_q0[351:320]}};
        tmp_2_reg_1116 <= grp_fu_275_p2;
        trunc_ln681_reg_1111 <= trunc_ln681_fu_520_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_reg_1050_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_3_10_reg_1401 <= {{local_C_V_q0[383:352]}};
        p_Result_3_11_reg_1411 <= {{local_C_V_q0[415:384]}};
        p_Result_3_12_reg_1421 <= {{local_C_V_q0[447:416]}};
        p_Result_3_13_reg_1431 <= {{local_C_V_q0[479:448]}};
        p_Result_3_14_reg_1441 <= {{local_C_V_q0[511:480]}};
        p_Result_3_1_reg_1301 <= {{local_C_V_q0[63:32]}};
        p_Result_3_2_reg_1311 <= {{local_C_V_q0[95:64]}};
        p_Result_3_3_reg_1321 <= {{local_C_V_q0[127:96]}};
        p_Result_3_4_reg_1331 <= {{local_C_V_q0[159:128]}};
        p_Result_3_5_reg_1341 <= {{local_C_V_q0[191:160]}};
        p_Result_3_6_reg_1351 <= {{local_C_V_q0[223:192]}};
        p_Result_3_7_reg_1361 <= {{local_C_V_q0[255:224]}};
        p_Result_3_8_reg_1371 <= {{local_C_V_q0[287:256]}};
        p_Result_3_9_reg_1381 <= {{local_C_V_q0[319:288]}};
        p_Result_3_s_reg_1391 <= {{local_C_V_q0[351:320]}};
        tmp_3_10_reg_1406 <= grp_fu_323_p2;
        tmp_3_11_reg_1416 <= grp_fu_327_p2;
        tmp_3_12_reg_1426 <= grp_fu_331_p2;
        tmp_3_13_reg_1436 <= grp_fu_335_p2;
        tmp_3_14_reg_1446 <= grp_fu_339_p2;
        tmp_3_1_reg_1306 <= grp_fu_283_p2;
        tmp_3_2_reg_1316 <= grp_fu_287_p2;
        tmp_3_3_reg_1326 <= grp_fu_291_p2;
        tmp_3_4_reg_1336 <= grp_fu_295_p2;
        tmp_3_5_reg_1346 <= grp_fu_299_p2;
        tmp_3_6_reg_1356 <= grp_fu_303_p2;
        tmp_3_7_reg_1366 <= grp_fu_307_p2;
        tmp_3_8_reg_1376 <= grp_fu_311_p2;
        tmp_3_9_reg_1386 <= grp_fu_315_p2;
        tmp_3_s_reg_1396 <= grp_fu_319_p2;
        tmp_s_reg_1296 <= grp_fu_279_p2;
        trunc_ln681_1_reg_1291 <= trunc_ln681_1_fu_738_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln28_fu_343_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln33_1_reg_1059 <= select_ln33_1_fu_375_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln28_reg_1050_pp0_iter16_reg == 1'd0))) begin
        tmp_4_10_reg_1586 <= grp_fu_255_p2;
        tmp_4_11_reg_1591 <= grp_fu_259_p2;
        tmp_4_12_reg_1596 <= grp_fu_263_p2;
        tmp_4_13_reg_1601 <= grp_fu_267_p2;
        tmp_4_14_reg_1606 <= grp_fu_271_p2;
        tmp_4_1_reg_1536 <= grp_fu_215_p2;
        tmp_4_2_reg_1541 <= grp_fu_219_p2;
        tmp_4_3_reg_1546 <= grp_fu_223_p2;
        tmp_4_4_reg_1551 <= grp_fu_227_p2;
        tmp_4_5_reg_1556 <= grp_fu_231_p2;
        tmp_4_6_reg_1561 <= grp_fu_235_p2;
        tmp_4_7_reg_1566 <= grp_fu_239_p2;
        tmp_4_8_reg_1571 <= grp_fu_243_p2;
        tmp_4_9_reg_1576 <= grp_fu_247_p2;
        tmp_4_reg_1531 <= grp_fu_211_p2;
        tmp_4_s_reg_1581 <= grp_fu_251_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_reg_1050_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln34_reg_1096 <= trunc_ln34_fu_508_p1;
    end
end

always @ (*) begin
    if ((icmp_ln28_fu_343_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln28_reg_1050 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_kk_0_phi_fu_193_p4 = select_ln33_1_reg_1059;
    end else begin
        ap_phi_mux_kk_0_phi_fu_193_p4 = kk_0_reg_189;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        local_A_0_V_ce0 = 1'b1;
    end else begin
        local_A_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        local_B_V_ce0 = 1'b1;
    end else begin
        local_B_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        local_C_V_ce0 = 1'b1;
    end else begin
        local_C_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        local_C_V_ce1 = 1'b1;
    end else begin
        local_C_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln28_reg_1050_pp0_iter17_reg == 1'd0))) begin
        local_C_V_we1 = 1'b1;
    end else begin
        local_C_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (flag_read_read_fu_130_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_start == 1'b1) & (flag_read_read_fu_130_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln28_fu_343_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter17 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter18 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter17 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter18 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln28_fu_343_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln28_1_fu_369_p2 = (5'd1 + ap_phi_mux_kk_0_phi_fu_193_p4);

assign add_ln28_fu_349_p2 = (indvar_flatten_reg_178 + 9'd1);

assign and_ln681_fu_503_p2 = (lshr_ln681_reg_1091 & lshr_ln681_1_fu_497_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_135 = (icmp_ln28_reg_1050_pp0_iter8_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_152 = (icmp_ln28_reg_1050_pp0_iter9_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_335 = (icmp_ln28_reg_1050_pp0_iter17_reg == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state11_pp0_iter9_stage0 = ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state12_pp0_iter10_stage0 = ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state20_pp0_iter18_stage0 = ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign bitcast_ln41_16_fu_956_p1 = tmp_4_reg_1531;

assign bitcast_ln41_17_fu_959_p1 = tmp_4_1_reg_1536;

assign bitcast_ln41_18_fu_962_p1 = tmp_4_2_reg_1541;

assign bitcast_ln41_19_fu_965_p1 = tmp_4_3_reg_1546;

assign bitcast_ln41_20_fu_968_p1 = tmp_4_4_reg_1551;

assign bitcast_ln41_21_fu_971_p1 = tmp_4_5_reg_1556;

assign bitcast_ln41_22_fu_974_p1 = tmp_4_6_reg_1561;

assign bitcast_ln41_23_fu_977_p1 = tmp_4_7_reg_1566;

assign bitcast_ln41_24_fu_980_p1 = tmp_4_8_reg_1571;

assign bitcast_ln41_25_fu_983_p1 = tmp_4_9_reg_1576;

assign bitcast_ln41_26_fu_986_p1 = tmp_4_s_reg_1581;

assign bitcast_ln41_27_fu_989_p1 = tmp_4_10_reg_1586;

assign bitcast_ln41_28_fu_992_p1 = tmp_4_11_reg_1591;

assign bitcast_ln41_29_fu_995_p1 = tmp_4_12_reg_1596;

assign bitcast_ln41_30_fu_998_p1 = tmp_4_13_reg_1601;

assign bitcast_ln41_31_fu_1001_p1 = tmp_4_14_reg_1606;

assign flag_read_read_fu_130_p2 = flag;

assign grp_fu_211_p0 = trunc_ln681_1_reg_1291;

assign grp_fu_215_p0 = p_Result_3_1_reg_1301;

assign grp_fu_219_p0 = p_Result_3_2_reg_1311;

assign grp_fu_223_p0 = p_Result_3_3_reg_1321;

assign grp_fu_227_p0 = p_Result_3_4_reg_1331;

assign grp_fu_231_p0 = p_Result_3_5_reg_1341;

assign grp_fu_235_p0 = p_Result_3_6_reg_1351;

assign grp_fu_239_p0 = p_Result_3_7_reg_1361;

assign grp_fu_243_p0 = p_Result_3_8_reg_1371;

assign grp_fu_247_p0 = p_Result_3_9_reg_1381;

assign grp_fu_251_p0 = p_Result_3_s_reg_1391;

assign grp_fu_255_p0 = p_Result_3_10_reg_1401;

assign grp_fu_259_p0 = p_Result_3_11_reg_1411;

assign grp_fu_263_p0 = p_Result_3_12_reg_1421;

assign grp_fu_267_p0 = p_Result_3_13_reg_1431;

assign grp_fu_271_p0 = p_Result_3_14_reg_1441;

assign grp_fu_275_p0 = trunc_ln34_reg_1096;

assign grp_fu_279_p1 = trunc_ln681_reg_1111;

assign grp_fu_283_p1 = p_Result_2_1_reg_1136;

assign grp_fu_287_p1 = p_Result_2_2_reg_1141;

assign grp_fu_291_p1 = p_Result_2_3_reg_1146;

assign grp_fu_295_p1 = p_Result_2_4_reg_1151;

assign grp_fu_299_p1 = p_Result_2_5_reg_1156;

assign grp_fu_303_p1 = p_Result_2_6_reg_1161;

assign grp_fu_307_p1 = p_Result_2_7_reg_1166;

assign grp_fu_311_p1 = p_Result_2_8_reg_1171;

assign grp_fu_315_p1 = p_Result_2_9_reg_1176;

assign grp_fu_319_p1 = p_Result_2_s_reg_1181;

assign grp_fu_323_p1 = p_Result_2_10_reg_1186;

assign grp_fu_327_p1 = p_Result_2_11_reg_1191;

assign grp_fu_331_p1 = p_Result_2_12_reg_1196;

assign grp_fu_335_p1 = p_Result_2_13_reg_1201;

assign grp_fu_339_p1 = p_Result_2_14_reg_1206;

assign icmp_ln28_fu_343_p2 = ((indvar_flatten_reg_178 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_355_p2 = ((ii_0_reg_200 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln681_fu_412_p2 = ((zext_ln33_1_mid2_v_fu_399_p3 > or_ln33_fu_406_p2) ? 1'b1 : 1'b0);

assign ii_fu_393_p2 = (5'd1 + select_ln33_fu_361_p3);

assign local_A_0_V_address0 = zext_ln34_fu_387_p1;

assign local_B_V_address0 = zext_ln33_fu_516_p1;

assign local_C_V_address0 = local_C_V_addr_reg_1075_pp0_iter8_reg;

assign local_C_V_address1 = local_C_V_addr_reg_1075_pp0_iter17_reg;

assign local_C_V_d1 = {{{{{{{{{{{{{{{{bitcast_ln41_31_fu_1001_p1}, {bitcast_ln41_30_fu_998_p1}}, {bitcast_ln41_29_fu_995_p1}}, {bitcast_ln41_28_fu_992_p1}}, {bitcast_ln41_27_fu_989_p1}}, {bitcast_ln41_26_fu_986_p1}}, {bitcast_ln41_25_fu_983_p1}}, {bitcast_ln41_24_fu_980_p1}}, {bitcast_ln41_23_fu_977_p1}}, {bitcast_ln41_22_fu_974_p1}}, {bitcast_ln41_21_fu_971_p1}}, {bitcast_ln41_20_fu_968_p1}}, {bitcast_ln41_19_fu_965_p1}}, {bitcast_ln41_18_fu_962_p1}}, {bitcast_ln41_17_fu_959_p1}}, {bitcast_ln41_16_fu_956_p1}};

assign lshr_ln681_1_fu_497_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 >> zext_ln681_3_fu_494_p1;

assign lshr_ln681_fu_488_p2 = select_ln681_1_fu_462_p3 >> zext_ln681_2_fu_484_p1;

assign or_ln33_fu_406_p2 = (zext_ln33_1_mid2_v_fu_399_p3 | 9'd31);

assign select_ln33_1_fu_375_p3 = ((icmp_ln29_fu_355_p2[0:0] === 1'b1) ? add_ln28_1_fu_369_p2 : ap_phi_mux_kk_0_phi_fu_193_p4);

assign select_ln33_fu_361_p3 = ((icmp_ln29_fu_355_p2[0:0] === 1'b1) ? 5'd0 : ii_0_reg_200);

assign select_ln681_1_fu_462_p3 = ((icmp_ln681_fu_412_p2[0:0] === 1'b1) ? tmp_fu_426_p4 : local_A_0_V_q0);

assign select_ln681_2_fu_470_p3 = ((icmp_ln681_fu_412_p2[0:0] === 1'b1) ? xor_ln681_fu_442_p2 : zext_ln681_fu_418_p1);

assign select_ln681_fu_454_p3 = ((icmp_ln681_fu_412_p2[0:0] === 1'b1) ? sub_ln681_fu_436_p2 : sub_ln681_1_fu_448_p2);

assign sub_ln681_1_fu_448_p2 = (zext_ln681_1_fu_422_p1 - zext_ln681_fu_418_p1);

assign sub_ln681_2_fu_478_p2 = (10'd511 - select_ln681_fu_454_p3);

assign sub_ln681_fu_436_p2 = (zext_ln681_fu_418_p1 - zext_ln681_1_fu_422_p1);

integer ap_tvar_int_0;

always @ (local_A_0_V_q0) begin
    for (ap_tvar_int_0 = 512 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 511 - 0) begin
            tmp_fu_426_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_fu_426_p4[ap_tvar_int_0] = local_A_0_V_q0[511 - ap_tvar_int_0];
        end
    end
end

assign trunc_ln33_fu_383_p1 = select_ln33_1_fu_375_p3[3:0];

assign trunc_ln34_fu_508_p1 = and_ln681_fu_503_p2[31:0];

assign trunc_ln681_1_fu_738_p1 = local_C_V_q0[31:0];

assign trunc_ln681_fu_520_p1 = local_B_V_q0[31:0];

assign xor_ln681_fu_442_p2 = (zext_ln681_fu_418_p1 ^ 10'd511);

assign zext_ln33_1_mid2_v_fu_399_p3 = {{trunc_ln33_reg_1065}, {5'd0}};

assign zext_ln33_fu_516_p1 = select_ln33_1_reg_1059_pp0_iter4_reg;

assign zext_ln34_fu_387_p1 = select_ln33_fu_361_p3;

assign zext_ln681_1_fu_422_p1 = or_ln33_fu_406_p2;

assign zext_ln681_2_fu_484_p1 = select_ln681_2_fu_470_p3;

assign zext_ln681_3_fu_494_p1 = sub_ln681_2_reg_1086;

assign zext_ln681_fu_418_p1 = zext_ln33_1_mid2_v_fu_399_p3;

always @ (posedge ap_clk) begin
    sub_ln681_2_reg_1086[0] <= 1'b0;
end

endmodule //compute
