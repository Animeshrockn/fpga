// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _kernel_gemm_HH_
#define _kernel_gemm_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "kernel_gemm_fadd_bkb.h"
#include "kernel_gemm_fmul_cud.h"
#include "kernel_gemm_ctrl_bus_s_axi.h"
#include "kernel_gemm_func_bus_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_FUNC_BUS_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_FUNC_BUS_ID_WIDTH = 1,
         unsigned int C_M_AXI_FUNC_BUS_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_FUNC_BUS_DATA_WIDTH = 32,
         unsigned int C_M_AXI_FUNC_BUS_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_FUNC_BUS_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_FUNC_BUS_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_FUNC_BUS_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CTRL_BUS_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CTRL_BUS_DATA_WIDTH = 32>
struct kernel_gemm : public sc_module {
    // Port declarations 67
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_func_bus_AWVALID;
    sc_in< sc_logic > m_axi_func_bus_AWREADY;
    sc_out< sc_uint<C_M_AXI_FUNC_BUS_ADDR_WIDTH> > m_axi_func_bus_AWADDR;
    sc_out< sc_uint<C_M_AXI_FUNC_BUS_ID_WIDTH> > m_axi_func_bus_AWID;
    sc_out< sc_lv<8> > m_axi_func_bus_AWLEN;
    sc_out< sc_lv<3> > m_axi_func_bus_AWSIZE;
    sc_out< sc_lv<2> > m_axi_func_bus_AWBURST;
    sc_out< sc_lv<2> > m_axi_func_bus_AWLOCK;
    sc_out< sc_lv<4> > m_axi_func_bus_AWCACHE;
    sc_out< sc_lv<3> > m_axi_func_bus_AWPROT;
    sc_out< sc_lv<4> > m_axi_func_bus_AWQOS;
    sc_out< sc_lv<4> > m_axi_func_bus_AWREGION;
    sc_out< sc_uint<C_M_AXI_FUNC_BUS_AWUSER_WIDTH> > m_axi_func_bus_AWUSER;
    sc_out< sc_logic > m_axi_func_bus_WVALID;
    sc_in< sc_logic > m_axi_func_bus_WREADY;
    sc_out< sc_uint<C_M_AXI_FUNC_BUS_DATA_WIDTH> > m_axi_func_bus_WDATA;
    sc_out< sc_uint<C_M_AXI_FUNC_BUS_DATA_WIDTH/8> > m_axi_func_bus_WSTRB;
    sc_out< sc_logic > m_axi_func_bus_WLAST;
    sc_out< sc_uint<C_M_AXI_FUNC_BUS_ID_WIDTH> > m_axi_func_bus_WID;
    sc_out< sc_uint<C_M_AXI_FUNC_BUS_WUSER_WIDTH> > m_axi_func_bus_WUSER;
    sc_out< sc_logic > m_axi_func_bus_ARVALID;
    sc_in< sc_logic > m_axi_func_bus_ARREADY;
    sc_out< sc_uint<C_M_AXI_FUNC_BUS_ADDR_WIDTH> > m_axi_func_bus_ARADDR;
    sc_out< sc_uint<C_M_AXI_FUNC_BUS_ID_WIDTH> > m_axi_func_bus_ARID;
    sc_out< sc_lv<8> > m_axi_func_bus_ARLEN;
    sc_out< sc_lv<3> > m_axi_func_bus_ARSIZE;
    sc_out< sc_lv<2> > m_axi_func_bus_ARBURST;
    sc_out< sc_lv<2> > m_axi_func_bus_ARLOCK;
    sc_out< sc_lv<4> > m_axi_func_bus_ARCACHE;
    sc_out< sc_lv<3> > m_axi_func_bus_ARPROT;
    sc_out< sc_lv<4> > m_axi_func_bus_ARQOS;
    sc_out< sc_lv<4> > m_axi_func_bus_ARREGION;
    sc_out< sc_uint<C_M_AXI_FUNC_BUS_ARUSER_WIDTH> > m_axi_func_bus_ARUSER;
    sc_in< sc_logic > m_axi_func_bus_RVALID;
    sc_out< sc_logic > m_axi_func_bus_RREADY;
    sc_in< sc_uint<C_M_AXI_FUNC_BUS_DATA_WIDTH> > m_axi_func_bus_RDATA;
    sc_in< sc_logic > m_axi_func_bus_RLAST;
    sc_in< sc_uint<C_M_AXI_FUNC_BUS_ID_WIDTH> > m_axi_func_bus_RID;
    sc_in< sc_uint<C_M_AXI_FUNC_BUS_RUSER_WIDTH> > m_axi_func_bus_RUSER;
    sc_in< sc_lv<2> > m_axi_func_bus_RRESP;
    sc_in< sc_logic > m_axi_func_bus_BVALID;
    sc_out< sc_logic > m_axi_func_bus_BREADY;
    sc_in< sc_lv<2> > m_axi_func_bus_BRESP;
    sc_in< sc_uint<C_M_AXI_FUNC_BUS_ID_WIDTH> > m_axi_func_bus_BID;
    sc_in< sc_uint<C_M_AXI_FUNC_BUS_BUSER_WIDTH> > m_axi_func_bus_BUSER;
    sc_in< sc_lv<32> > alpha;
    sc_in< sc_lv<32> > beta;
    sc_in< sc_logic > s_axi_ctrl_bus_AWVALID;
    sc_out< sc_logic > s_axi_ctrl_bus_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_ctrl_bus_AWADDR;
    sc_in< sc_logic > s_axi_ctrl_bus_WVALID;
    sc_out< sc_logic > s_axi_ctrl_bus_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_ctrl_bus_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH/8> > s_axi_ctrl_bus_WSTRB;
    sc_in< sc_logic > s_axi_ctrl_bus_ARVALID;
    sc_out< sc_logic > s_axi_ctrl_bus_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_ctrl_bus_ARADDR;
    sc_out< sc_logic > s_axi_ctrl_bus_RVALID;
    sc_in< sc_logic > s_axi_ctrl_bus_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_ctrl_bus_RDATA;
    sc_out< sc_lv<2> > s_axi_ctrl_bus_RRESP;
    sc_out< sc_logic > s_axi_ctrl_bus_BVALID;
    sc_in< sc_logic > s_axi_ctrl_bus_BREADY;
    sc_out< sc_lv<2> > s_axi_ctrl_bus_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const5;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<3> > ap_var_for_const2;
    sc_signal< sc_lv<2> > ap_var_for_const3;
    sc_signal< sc_lv<4> > ap_var_for_const4;
    sc_signal< sc_lv<4> > ap_var_for_const6;


    // Module declarations
    kernel_gemm(sc_module_name name);
    SC_HAS_PROCESS(kernel_gemm);

    ~kernel_gemm();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    kernel_gemm_ctrl_bus_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>* kernel_gemm_ctrl_bus_s_axi_U;
    kernel_gemm_func_bus_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_FUNC_BUS_ID_WIDTH,C_M_AXI_FUNC_BUS_ADDR_WIDTH,C_M_AXI_FUNC_BUS_DATA_WIDTH,C_M_AXI_FUNC_BUS_AWUSER_WIDTH,C_M_AXI_FUNC_BUS_ARUSER_WIDTH,C_M_AXI_FUNC_BUS_WUSER_WIDTH,C_M_AXI_FUNC_BUS_RUSER_WIDTH,C_M_AXI_FUNC_BUS_BUSER_WIDTH,C_M_AXI_FUNC_BUS_USER_VALUE,C_M_AXI_FUNC_BUS_PROT_VALUE,C_M_AXI_FUNC_BUS_CACHE_VALUE>* kernel_gemm_func_bus_m_axi_U;
    kernel_gemm_fadd_bkb<1,7,32,32,32>* kernel_gemm_fadd_bkb_U1;
    kernel_gemm_fmul_cud<1,4,32,32,32>* kernel_gemm_fmul_cud_U2;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<50> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > C;
    sc_signal< sc_lv<32> > A;
    sc_signal< sc_lv<32> > B;
    sc_signal< sc_logic > func_bus_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > func_bus_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > func_bus_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > func_bus_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > icmp_ln18_fu_332_p2;
    sc_signal< sc_logic > func_bus_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_logic > ap_CS_fsm_state37;
    sc_signal< sc_logic > ap_CS_fsm_state44;
    sc_signal< sc_logic > ap_CS_fsm_state45;
    sc_signal< sc_logic > ap_CS_fsm_state50;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_logic > func_bus_AWVALID;
    sc_signal< sc_logic > func_bus_AWREADY;
    sc_signal< sc_lv<32> > func_bus_AWADDR;
    sc_signal< sc_lv<32> > func_bus_AWLEN;
    sc_signal< sc_logic > func_bus_WVALID;
    sc_signal< sc_logic > func_bus_WREADY;
    sc_signal< sc_lv<32> > func_bus_WDATA;
    sc_signal< sc_logic > func_bus_ARVALID;
    sc_signal< sc_logic > func_bus_ARREADY;
    sc_signal< sc_lv<32> > func_bus_ARADDR;
    sc_signal< sc_lv<32> > func_bus_ARLEN;
    sc_signal< sc_logic > func_bus_RVALID;
    sc_signal< sc_logic > func_bus_RREADY;
    sc_signal< sc_lv<32> > func_bus_RDATA;
    sc_signal< sc_logic > func_bus_RLAST;
    sc_signal< sc_lv<1> > func_bus_RID;
    sc_signal< sc_lv<1> > func_bus_RUSER;
    sc_signal< sc_lv<2> > func_bus_RRESP;
    sc_signal< sc_logic > func_bus_BVALID;
    sc_signal< sc_logic > func_bus_BREADY;
    sc_signal< sc_lv<2> > func_bus_BRESP;
    sc_signal< sc_lv<1> > func_bus_BID;
    sc_signal< sc_lv<1> > func_bus_BUSER;
    sc_signal< sc_lv<32> > grp_fu_236_p2;
    sc_signal< sc_lv<32> > reg_240;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<31> > p_cast10_fu_257_p1;
    sc_signal< sc_lv<31> > p_cast10_reg_470;
    sc_signal< sc_lv<31> > p_cast9_fu_271_p1;
    sc_signal< sc_lv<31> > p_cast9_reg_475;
    sc_signal< sc_lv<31> > p_cast_fu_285_p1;
    sc_signal< sc_lv<31> > p_cast_reg_480;
    sc_signal< sc_lv<12> > i_fu_295_p2;
    sc_signal< sc_lv<12> > i_reg_489;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<22> > shl_ln_fu_305_p3;
    sc_signal< sc_lv<22> > shl_ln_reg_494;
    sc_signal< sc_lv<1> > icmp_ln17_fu_289_p2;
    sc_signal< sc_lv<31> > add_ln19_fu_317_p2;
    sc_signal< sc_lv<31> > add_ln19_reg_500;
    sc_signal< sc_lv<32> > func_bus_addr_reg_505;
    sc_signal< sc_lv<12> > j_fu_338_p2;
    sc_signal< sc_lv<12> > j_reg_515;
    sc_signal< bool > ap_block_state10;
    sc_signal< sc_lv<32> > func_bus_addr_read_reg_520;
    sc_signal< sc_lv<22> > zext_ln21_fu_344_p1;
    sc_signal< sc_lv<22> > zext_ln21_reg_525;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<12> > j_1_fu_354_p2;
    sc_signal< sc_lv<12> > j_1_reg_533;
    sc_signal< sc_lv<32> > func_bus_addr_1_reg_538;
    sc_signal< sc_lv<1> > icmp_ln21_fu_348_p2;
    sc_signal< sc_lv<12> > k_fu_394_p2;
    sc_signal< sc_lv<12> > k_reg_548;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<31> > add_ln23_4_fu_409_p2;
    sc_signal< sc_lv<31> > add_ln23_4_reg_553;
    sc_signal< sc_lv<1> > icmp_ln22_fu_388_p2;
    sc_signal< sc_lv<31> > add_ln23_5_fu_435_p2;
    sc_signal< sc_lv<31> > add_ln23_5_reg_558;
    sc_signal< sc_lv<32> > func_bus_addr_2_read_reg_575;
    sc_signal< sc_lv<32> > func_bus_addr_3_read_reg_580;
    sc_signal< sc_lv<32> > func_bus_addr_1_read_reg_585;
    sc_signal< sc_lv<32> > grp_fu_232_p2;
    sc_signal< sc_lv<32> > tmp_3_reg_590;
    sc_signal< sc_lv<12> > i_0_reg_188;
    sc_signal< sc_lv<12> > j_0_reg_199;
    sc_signal< sc_lv<12> > j1_0_reg_210;
    sc_signal< sc_lv<12> > k_0_reg_221;
    sc_signal< sc_lv<64> > zext_ln19_1_fu_322_p1;
    sc_signal< sc_lv<64> > zext_ln23_1_fu_374_p1;
    sc_signal< sc_lv<64> > zext_ln23_3_fu_440_p1;
    sc_signal< sc_lv<64> > zext_ln23_5_fu_450_p1;
    sc_signal< sc_logic > ap_CS_fsm_state38;
    sc_signal< sc_lv<32> > grp_fu_236_p0;
    sc_signal< sc_lv<32> > grp_fu_236_p1;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_lv<30> > tmp_6_fu_247_p4;
    sc_signal< sc_lv<30> > tmp_7_fu_261_p4;
    sc_signal< sc_lv<30> > tmp_8_fu_275_p4;
    sc_signal< sc_lv<11> > trunc_ln19_fu_301_p1;
    sc_signal< sc_lv<31> > zext_ln19_fu_313_p1;
    sc_signal< sc_lv<22> > add_ln23_fu_360_p2;
    sc_signal< sc_lv<31> > zext_ln23_fu_365_p1;
    sc_signal< sc_lv<31> > add_ln23_3_fu_369_p2;
    sc_signal< sc_lv<22> > zext_ln22_fu_384_p1;
    sc_signal< sc_lv<22> > add_ln23_1_fu_400_p2;
    sc_signal< sc_lv<31> > zext_ln23_2_fu_405_p1;
    sc_signal< sc_lv<11> > trunc_ln23_fu_414_p1;
    sc_signal< sc_lv<22> > shl_ln1_fu_418_p3;
    sc_signal< sc_lv<22> > add_ln23_2_fu_426_p2;
    sc_signal< sc_lv<31> > zext_ln23_4_fu_431_p1;
    sc_signal< sc_logic > grp_fu_232_ce;
    sc_signal< sc_logic > ap_CS_fsm_state39;
    sc_signal< sc_logic > ap_CS_fsm_state40;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_logic > grp_fu_236_ce;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_logic > ap_CS_fsm_state36;
    sc_signal< sc_lv<50> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<50> ap_ST_fsm_state1;
    static const sc_lv<50> ap_ST_fsm_state2;
    static const sc_lv<50> ap_ST_fsm_state3;
    static const sc_lv<50> ap_ST_fsm_state4;
    static const sc_lv<50> ap_ST_fsm_state5;
    static const sc_lv<50> ap_ST_fsm_state6;
    static const sc_lv<50> ap_ST_fsm_state7;
    static const sc_lv<50> ap_ST_fsm_state8;
    static const sc_lv<50> ap_ST_fsm_state9;
    static const sc_lv<50> ap_ST_fsm_state10;
    static const sc_lv<50> ap_ST_fsm_state11;
    static const sc_lv<50> ap_ST_fsm_state12;
    static const sc_lv<50> ap_ST_fsm_state13;
    static const sc_lv<50> ap_ST_fsm_state14;
    static const sc_lv<50> ap_ST_fsm_state15;
    static const sc_lv<50> ap_ST_fsm_state16;
    static const sc_lv<50> ap_ST_fsm_state17;
    static const sc_lv<50> ap_ST_fsm_state18;
    static const sc_lv<50> ap_ST_fsm_state19;
    static const sc_lv<50> ap_ST_fsm_state20;
    static const sc_lv<50> ap_ST_fsm_state21;
    static const sc_lv<50> ap_ST_fsm_state22;
    static const sc_lv<50> ap_ST_fsm_state23;
    static const sc_lv<50> ap_ST_fsm_state24;
    static const sc_lv<50> ap_ST_fsm_state25;
    static const sc_lv<50> ap_ST_fsm_state26;
    static const sc_lv<50> ap_ST_fsm_state27;
    static const sc_lv<50> ap_ST_fsm_state28;
    static const sc_lv<50> ap_ST_fsm_state29;
    static const sc_lv<50> ap_ST_fsm_state30;
    static const sc_lv<50> ap_ST_fsm_state31;
    static const sc_lv<50> ap_ST_fsm_state32;
    static const sc_lv<50> ap_ST_fsm_state33;
    static const sc_lv<50> ap_ST_fsm_state34;
    static const sc_lv<50> ap_ST_fsm_state35;
    static const sc_lv<50> ap_ST_fsm_state36;
    static const sc_lv<50> ap_ST_fsm_state37;
    static const sc_lv<50> ap_ST_fsm_state38;
    static const sc_lv<50> ap_ST_fsm_state39;
    static const sc_lv<50> ap_ST_fsm_state40;
    static const sc_lv<50> ap_ST_fsm_state41;
    static const sc_lv<50> ap_ST_fsm_state42;
    static const sc_lv<50> ap_ST_fsm_state43;
    static const sc_lv<50> ap_ST_fsm_state44;
    static const sc_lv<50> ap_ST_fsm_state45;
    static const sc_lv<50> ap_ST_fsm_state46;
    static const sc_lv<50> ap_ST_fsm_state47;
    static const sc_lv<50> ap_ST_fsm_state48;
    static const sc_lv<50> ap_ST_fsm_state49;
    static const sc_lv<50> ap_ST_fsm_state50;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_20;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_FUNC_BUS_USER_VALUE;
    static const int C_M_AXI_FUNC_BUS_PROT_VALUE;
    static const int C_M_AXI_FUNC_BUS_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_800;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<12> ap_const_lv12_800;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_23;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const6();
    void thread_ap_clk_no_reset_();
    void thread_add_ln19_fu_317_p2();
    void thread_add_ln23_1_fu_400_p2();
    void thread_add_ln23_2_fu_426_p2();
    void thread_add_ln23_3_fu_369_p2();
    void thread_add_ln23_4_fu_409_p2();
    void thread_add_ln23_5_fu_435_p2();
    void thread_add_ln23_fu_360_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state36();
    void thread_ap_CS_fsm_state37();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state40();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state44();
    void thread_ap_CS_fsm_state45();
    void thread_ap_CS_fsm_state50();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state10();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_func_bus_ARADDR();
    void thread_func_bus_ARLEN();
    void thread_func_bus_ARVALID();
    void thread_func_bus_AWADDR();
    void thread_func_bus_AWLEN();
    void thread_func_bus_AWVALID();
    void thread_func_bus_BREADY();
    void thread_func_bus_RREADY();
    void thread_func_bus_WDATA();
    void thread_func_bus_WVALID();
    void thread_func_bus_blk_n_AR();
    void thread_func_bus_blk_n_AW();
    void thread_func_bus_blk_n_B();
    void thread_func_bus_blk_n_R();
    void thread_func_bus_blk_n_W();
    void thread_grp_fu_232_ce();
    void thread_grp_fu_236_ce();
    void thread_grp_fu_236_p0();
    void thread_grp_fu_236_p1();
    void thread_i_fu_295_p2();
    void thread_icmp_ln17_fu_289_p2();
    void thread_icmp_ln18_fu_332_p2();
    void thread_icmp_ln21_fu_348_p2();
    void thread_icmp_ln22_fu_388_p2();
    void thread_j_1_fu_354_p2();
    void thread_j_fu_338_p2();
    void thread_k_fu_394_p2();
    void thread_p_cast10_fu_257_p1();
    void thread_p_cast9_fu_271_p1();
    void thread_p_cast_fu_285_p1();
    void thread_shl_ln1_fu_418_p3();
    void thread_shl_ln_fu_305_p3();
    void thread_tmp_6_fu_247_p4();
    void thread_tmp_7_fu_261_p4();
    void thread_tmp_8_fu_275_p4();
    void thread_trunc_ln19_fu_301_p1();
    void thread_trunc_ln23_fu_414_p1();
    void thread_zext_ln19_1_fu_322_p1();
    void thread_zext_ln19_fu_313_p1();
    void thread_zext_ln21_fu_344_p1();
    void thread_zext_ln22_fu_384_p1();
    void thread_zext_ln23_1_fu_374_p1();
    void thread_zext_ln23_2_fu_405_p1();
    void thread_zext_ln23_3_fu_440_p1();
    void thread_zext_ln23_4_fu_431_p1();
    void thread_zext_ln23_5_fu_450_p1();
    void thread_zext_ln23_fu_365_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
